<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.1msuoqb1o3grj0159y7xi1xwheif' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.1dabjtv1ykmaq71f639nn12yq9xb'>
            <connection class='textscan' directory='C:/Users/ishgo/OneDrive/Desktop/Kaggle/Covid19_Dataset/Covid19_global_data' filename='worldometer_coronavirus_summary_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1dabjtv1ykmaq71f639nn12yq9xb' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1dabjtv1ykmaq71f639nn12yq9xb' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_or_critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[serious_or_critical]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>serious_or_critical</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths_per_1m_population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality_Rate' datatype='real' name='[Calculation_1703768075744641024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_deaths]*100/[total_confirmed]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per 1M Population' datatype='real' name='[total_tests_per_1m_population]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1703768075744641024]' derivation='Sum' name='[sum:Calculation_1703768075744641024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[serious_or_critical]' derivation='Sum' name='[sum:serious_or_critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_1m_population]' derivation='Sum' name='[sum:total_cases_per_1m_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_1m_population]' derivation='Sum' name='[sum:total_deaths_per_1m_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests_per_1m_population]' derivation='Sum' name='[sum:total_tests_per_1m_population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:Calculation_1703768075744641024:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths_per_1m_population:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:serious_or_critical:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_cases_per_1m_population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_tests_per_1m_population:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1msuoqb1o3grj0159y7xi1xwheif].[__tableau_internal_object_id__].[cnt:worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_928C6594CCFE4742AF236C9164121841'>
            <properties context=''>
              <relation connection='textscan.1dabjtv1ykmaq71f639nn12yq9xb' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='total_recovered' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='serious_or_critical' ordinal='6' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
                  <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
                  <column datatype='real' name='total_tests' ordinal='9' />
                  <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='population' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Active cases By Country - Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Active cases By Country - Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[Latitude (generated)]</column>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[Longitude (generated)]' field-type='quantitative' max='26462291.970556661' min='-16982182.678216223' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[Latitude (generated)]' field-type='quantitative' max='13315450.240346808' min='-7720821.4631570466' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]' />
              <lod column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
              <lod column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1msuoqb1o3grj0159y7xi1xwheif].[Latitude (generated)]</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E000FB73-CA44-4816-979C-BB9F65641431}' />
    </worksheet>
    <worksheet name='Average Recoveries for top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Recoveries for bottom 10
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column-instance column='[total_recovered]' derivation='Avg' name='[avg:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
              <size column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[avg:total_recovered:qk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7E644E92-99E5-4137-A3A1-9CE35BEBE77B}' />
    </worksheet>
    <worksheet name='Mortality by Country - Top Mortality rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortality by Country - Top Mortality rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Mortality_Rate' datatype='real' name='[Calculation_1703768075744641024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_deaths]*100/[total_confirmed]' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1703768075744641024]' derivation='Sum' name='[sum:Calculation_1703768075744641024:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:Calculation_1703768075744641024:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:Calculation_1703768075744641024:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:Calculation_1703768075744641024:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:Calculation_1703768075744641024:qk]</cols>
      </table>
      <simple-id uuid='{EAC0F5FB-4801-4054-A493-6907ADD17832}' />
    </worksheet>
    <worksheet name='Top 10 countries with highest deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries with highest deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{13335313-AAF4-4EB8-880B-E25D36BCC66A}' />
    </worksheet>
    <worksheet name='Tota confirmed cases by country - horizontal'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tota confirmed cases by country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</cols>
      </table>
      <simple-id uuid='{0F3A94BF-0052-452F-887F-FDA2EF3F39E2}' />
    </worksheet>
    <worksheet name='Tota confirmed cases by country - vertical'>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{E2881DDE-6FD9-4548-BD1A-30810684137E}' />
    </worksheet>
    <worksheet name='Total Deaths and recovered by countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths and recovered by countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]</column>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' />
              <text column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_recovered:qk] + [federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk])</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{C8B58D2E-6E69-4E17-B680-8D0C3FDD59A4}' />
    </worksheet>
    <worksheet name='Total confirmed vs Deaths by countries top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total confirmed vs Deaths by countries top 10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.1msuoqb1o3grj0159y7xi1xwheif' />
          </datasources>
          <datasource-dependencies datasource='federated.1msuoqb1o3grj0159y7xi1xwheif'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' />
              <size column='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]</rows>
        <cols>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</cols>
      </table>
      <simple-id uuid='{89A0B3F1-A0A2-4491-89EC-1E014C206DD1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid19 Data Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid19 Data Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='16' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
            <zone h='5371' id='17' type-v2='title' w='99166' x='417' y='741'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93147' id='9' param='horz' type-v2='layout-flow' w='99166' x='417' y='6112'>
              <zone h='93147' id='7' type-v2='layout-basic' w='90833' x='417' y='6112'>
                <zone h='46572' id='3' name='Active cases By Country - Map' w='45419' x='45831' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46572' id='5' name='Tota confirmed cases by country - vertical' w='22706' x='417' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='46575' id='6' name='Top 10 countries with highest deaths' w='22706' x='417' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46575' id='11' name='Average Recoveries for top 10' w='15551' x='45831' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46575' id='18' name='Total confirmed vs Deaths by countries top 10' w='22708' x='23123' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46572' id='13' name='Total Deaths and recovered by countries' w='22708' x='23123' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46575' id='20' name='Mortality by Country - Top Mortality rate' w='29868' x='61382' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93147' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='8333' x='91250' y='6112'>
                <zone h='7500' id='10' name='Top 10 countries with highest deaths' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' type-v2='color' w='8333' x='91250' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='26297' id='12' name='Average Recoveries for top 10' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' type-v2='color' w='8333' x='91250' y='13612'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7778' id='14' name='Total Deaths and recovered by countries' pane-specification-id='5' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' type-v2='color' w='8333' x='91250' y='39909'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17037' id='19' name='Total confirmed vs Deaths by countries top 10' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]' type-v2='size' w='8333' x='91250' y='47687'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Covid19 Data Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='21' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone h='5371' id='17' type-v2='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46572' id='5' is-fixed='true' name='Tota confirmed cases by country - vertical' w='22706' x='417' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46572' id='13' is-fixed='true' name='Total Deaths and recovered by countries' w='22708' x='23123' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7778' id='14' name='Total Deaths and recovered by countries' pane-specification-id='5' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' type-v2='color' w='8333' x='91250' y='39909'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46572' id='3' is-fixed='true' name='Active cases By Country - Map' w='45419' x='45831' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46575' id='6' is-fixed='true' name='Top 10 countries with highest deaths' w='22706' x='417' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='10' name='Top 10 countries with highest deaths' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' type-v2='color' w='8333' x='91250' y='6112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46575' id='18' is-fixed='true' name='Total confirmed vs Deaths by countries top 10' w='22708' x='23123' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17037' id='19' name='Total confirmed vs Deaths by countries top 10' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]' type-v2='size' w='8333' x='91250' y='47687'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46575' id='11' is-fixed='true' name='Average Recoveries for top 10' w='15551' x='45831' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26297' id='12' name='Average Recoveries for top 10' pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' type-v2='color' w='8333' x='91250' y='13612'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46575' id='20' is-fixed='true' name='Mortality by Country - Top Mortality rate' w='29868' x='61382' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{832E1AAE-1B83-479B-8CF4-FF361F2E89AA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Tota confirmed cases by country - horizontal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07CC3656-8872-4D54-A0E5-0D249FCE47DB}' />
    </window>
    <window class='worksheet' name='Tota confirmed cases by country - vertical'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>1430825</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Philippines&quot;</value>
                <value>1588965</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chile&quot;</value>
                <value>1615771</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Iraq&quot;</value>
                <value>1626599</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Czech Republic&quot;</value>
                <value>1673576</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Netherlands&quot;</value>
                <value>1865511</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Peru&quot;</value>
                <value>2109294</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ukraine&quot;</value>
                <value>2252785</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Africa&quot;</value>
                <value>2447454</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mexico&quot;</value>
                <value>2829443</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poland&quot;</value>
                <value>2882939</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Indonesia&quot;</value>
                <value>3409658</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Germany&quot;</value>
                <value>3776721</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Iran&quot;</value>
                <value>3871008</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>4350028</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Spain&quot;</value>
                <value>4447044</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Colombia&quot;</value>
                <value>4785320</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Argentina&quot;</value>
                <value>4929764</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Turkey&quot;</value>
                <value>5727045</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;UK&quot;</value>
                <value>5856528</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>6127019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>6265873</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>19917855</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>31654584</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;USA&quot;</value>
                <value>35733967</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBAF3F9E-5105-4E34-87A5-22B0915931FC}' />
    </window>
    <window class='worksheet' name='Active cases By Country - Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBD99FA8-8446-4034-B5D8-396E7E40B7BF}' />
    </window>
    <window class='worksheet' name='Top 10 countries with highest deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA81C4C8-2D94-42E8-AEA2-6FF1A95BBE4A}' />
    </window>
    <window class='worksheet' name='Average Recoveries for top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF83EEA6-5411-4D67-BD81-003BFD12D127}' />
    </window>
    <window class='worksheet' name='Total confirmed vs Deaths by countries top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[sum:active_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C8E7F9A-87CE-4A4E-8B32-AF807F87CA5C}' />
    </window>
    <window class='worksheet' name='Mortality by Country - Top Mortality rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0E42025-E64A-446A-93BB-EA07B11AD172}' />
    </window>
    <window class='worksheet' name='Total Deaths and recovered by countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]</field>
            <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D50C9C0B-AD2D-4E8D-8AB3-5106278C1B55}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid19 Data Analysis'>
      <viewpoints>
        <viewpoint name='Active cases By Country - Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Recoveries for top 10'>
          <highlight>
            <color-one-way>
              <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Mortality by Country - Top Mortality rate' />
        <viewpoint name='Top 10 countries with highest deaths' />
        <viewpoint name='Tota confirmed cases by country - vertical'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[none:country:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;China&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Total Deaths and recovered by countries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1msuoqb1o3grj0159y7xi1xwheif].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total confirmed vs Deaths by countries top 10'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' visible='true'>
        <device is-portrait='false' type='Desktop' />
      </device-preview>
      <simple-id uuid='{9D6D2B3F-9C23-43D1-BCCE-8F3AC37AEEA0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Active cases By Country - Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Recoveries for top 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dd3Rc53mnn3vv3OkNwKB3kATBBnZKJCWrS1YsW15bkVuqy9rZjZ0tsZOT
      szmb3eOTPUl2N7Y31Zu4xco6lmzLsWWrUV2USEpsIIlCEgDR62Awvdy53/4xJMWOGWAagHnO
      wTkgOPN979y5v/u1t0hCCEGJEqsUudAGlChRSAyFNmAxXDlo6bpOIh4jEU+g60mELpBkCVmW
      MagqRqMJWVEuv16SpEKYXKJIWRYCEEKQSMQJBQLMz3kJ+ucJBQJEwiES8fiC7zeoKharFavd
      gcPpwukuw+FyoRpNJUGscqRiXQMIIQgG/MxOTjAzNUnA50PTEllrX1EU7E4XFZVVeGpqcbjc
      yHJpRrjaKCoBCCFIxOOMjwwxPjxE0D9PPsyTJAmLzU5NfQP1zS2YzJZVPzJcuu5XXv1LV2Ql
      XZuiEIAQgqDfz3D/OcZHhtH1ZMFskSSJyto6mtvW4iqvWFFf9kJoSZ3RmQAnz0/SNzzD6EyA
      uUCUaFxDkSVsZiNVZTaaql1saa2io9mDy7a8p5EFF0DQP89AXy+T46MIXS+kKdfhqa6htb0D
      V1n5sv6SFyISS/DK8UEOvDPA+bE59DRvCZtZZef6Wh7Z20574/J8WBREAJcWtQO9PYxcGEBP
      Fu6JvxCSJFFd38C6jZtX3NRI1wWvnxziiRdOMjkXWnQ7iiyxq6OOTz+8nepy27K6RnkXgBCC
      ybERek+dJB6N5rPrJWFQVdZ2bKK+ueWqbdXlii8Y5a9+fJgjPWNZa9NsNPDZD2zn3p2tKMtk
      QyGvAojHYvSdOsn4yFC+usw6FZVVbNi2E4vVWmhTFs3Q5Dz/44k3GJsJZL1tSYJfuX0dv/3w
      NlRD8T8o8iIAIQSBeR9d7xwmHArmurucYzSZ2bR9JxVV1ctquAe4MOHjT779Kt5AJKf93LO9
      hS9+dE/RjwQ5F4AQgomRYbpPHCVZxHP9TJEkiTUbNtGytn3ZiGDWH+YP/u5Fpn3hvPT34TvW
      85sPb0Mu4uuTU3kKIRg428vpY++sqJsfUp/t3JlT9HYdL+pF/CUSWpL/86PDebv5AX52sI+D
      p4bz1t9iyJkAhBCc6z7F+e7TeTnMKhTDA/2cPv5uUQtcCMHzR/o5dnYir/0mdcE//Pwo88Hi
      3ezIiQCErnP2TBeDZ/ty0XzRMTEyzOmjR4p2JPAFo/zgwKmC9D0XiPKDlwrTdzpkXQBCCPr7
      erhw7my2my5qJsdG6T55HL3IDvMAnj18Hn84VrD+Xzo6mNepVyZkVQBCCMaGL9Df253NZpcN
      Y0ODDPT1FNWUT0vqPHf4XEFtiMY1Xjo6UFAbbkZWBeCbnaHnxLFsNrns6O/tZmKkeBZ+J85N
      MBco/Bz8jZMX0JLFNzpmTQDRSIRTx94pyilAvuk5eYyAf77QZgBw/Fx+F743Y2w2yKS3+M6A
      siIAIQTdJ44RDRfnPC/faJrGmWPvoGlaQe0QQnBmcKagNlxCS+qcHfEW2ozryIoARgYHmJkc
      z0ZTKwa/z0d/b3dB1wOxRJJp3+Kd3LLN8JS/0CZcx5IFEAmHON9zOhu2rDiG+8/h980VrP9g
      JE4skd7W7Pu2r2H3hgb2tlem9Xq3y4ohwwPemfnimyEsSQCp09DTacXlrkZ0Xae360TB4hzi
      iWTaC89YJMKR7hFUs5mauirq7DLbNzdS4XDwwI5mtjaX0dJcw52b6mn1WKmtcmJEYUdHHffu
      bMWpLqyGSDx7Ia3ZYkkCmJudYXJsJFu2rEjm57yMF2pXKIMntNvt4CP3bGJyYhZZlpAlMCgy
      iXicWDLl8+8PRlEMCpIkoSgyqtGARZGRVSNu68L5FYrRI2jRAhBC0N9zpqj2vIuVgbM9BVkQ
      Gw0KBiW9r9jnC/DLwwM0N1ZBMsmapmrWVNuRZAl/MIKnzI6MYNYfpdZjB8BitWCS9bRHGYtJ
      XfRnyRWLTovinZlmbrY4dhiKnXAwyMTIEA0tbRm9TwjBXCDKifOTnBmcYmTKz1wwSjyRxKQq
      lDksNFY52dhSyda1NdfF5zqsRsxGA9H4wuJ7p2+cpC44cHwIoet4vQb03knimk7PsMbpwSSa
      DqGgQiyugSSh64K5UBA9mZ4IKt22jD5/PliUAIQQXDjbm21bVjRD/eeoa2xOK5pM1wU9QzM8
      /UYPR/vGSWg3vrnGZoOcHpzm2cPnMRoUdm+o49H961nXWIEsSZhUA9VlNnxpOKMl9dRInrx4
      I0dj74nmSgFFLv394sgfS0Ncl2iscqb92nyxKAEE/fN4Z6azbcuKJhQIMDs9RWVN7S1fN+sP
      8+1fHOfgqeHLN2U6xLUkb3YNc+jMKHd2NvFbD2/DbTezsaWS3uHZpZq/ZFRFZl1DeaHNuI6M
      1wBCCEaHLpTm/otgZLD/ptdNCEFX/yRf/psXeP3kUEY3/5VoSZ2Xjw3y5b99ge4L0+xov7Xg
      8kVDlZOqIpwCZSyApKYxVdr5WRTe6SlikRuHIp44N8lXv/c6s/7shCpOzYX4b995lUgsQaW7
      8PHL79vajJLmgjyfZGzRnHeG2DLK5lBM6LrO1MT1WRjmQ1H+8ZmjaS1WMyES0/jLJ9+mra4s
      q+1mitWkcs/2loLacDMyEoAQgqmx0VzZsiqYGhu7Jru14K9/fIShHLkJRGIapwemMRYwQ8P7
      b1tDmcNSsP5vRcYCmJ2aypUtq4LA/Bzx2HvBKa8cH+RQd24fKsFIHIOhMNOPKreNj961sSB9
      p0NGVyUcDBCL5jadxkpH0zTm51JekeFoIm/hgtGYRnVZfhehBkXm8x/aid1izGu/mZCRAHyz
      hd9OWwn4vKnr+EbXEJPe/Hhr6kJQ53HQUJmfvXgJ+Ni9m9i5vjh2oW5GRgK49OQqsTT8c16S
      emq7Mp+cHpzmP/7q7dSW23Pe1yP72nns7o1FnzMpIwEUS5TTcicUDOALROgdyq8rSTyRZMoX
      4k8+fTette6c9CFLEh+7ZxO/XeQJsS6RtgCSmkYkXDzBFcuZeCzGqfNjiz7sWgqnB6epKbfz
      p//2Pu7Z3pLVm9RlM/GVT+7nE/dvLso9/xuRtitELBYt2rw3y5Gzg+nF6nrKHIQCATxlToan
      r94qragux+CbYzKWvpBGLm63Wk0qv/fYbdzR2cT3nz/JwLgvfeOvwagq3NnZyON3NuMwxZmf
      6iIR96MnE4BAVoyoRieqyYlqcqGanEhycSTOTVsA8VisFPCeRaZm0osUq6504RUa9+9s453u
      Icb8GmtqHMzM+IiYjFjMJlqcCoOzCdZWqZybuPUofaVjnCRJ7FpfR2dbNYd7RnnhyHm6+qfS
      GpkkdCpNk7Q4xtla68OpTXLql160eBAhbvyglCQFg9GG0VyOvXwdZdWdlNXsxOnpQJYLU68x
      IwGUyB56BgX/ErEYA+NzdF3wYrFa0HTB5tZKjkxE0bQErS2V6DaN+MzCZzSxxPWnzUZV4Y4t
      Tezb3IgvEKWrf5Le4VlGpwPMBSJE4hoGWcJilLDqF/CId2k09WCRg0iSgACkMzkWIkki5icR
      8xOaH2Ry4AVAwmT1UNV8N3VrfwV3VSeykr+4gbQFkEgUX9jjyNgIDXUN1/3dNzlA1FqPEgtQ
      6akogGULY0kjhPAqJJAl2LmuiqPdo7g3XtxeFDoj/gSdFUaeGVx4impSb/6Vy5JEudPCXdta
      uGtby+W/a/Eg4+ef48Lp/0fAm+10l4JYeJrh7icZ7n4Se/k6mjd+jNq1D6MaHVnu63rSFkAx
      zv8HhwYxSRoD4/PIRgs7N7ZxqusU01OjtO2qR4mFCPuhq28AZ0UtHa31RROWZ1bTWySOT/kI
      J3RODfvY1FhG99AcHU3lDI778IeTyHFBbDpEkzlJOiuBMoc5bRt1XWOk58f0n/gOkUB+HCCD
      3rOcfuOr9B//Fq1bf5PGjsdyOiKkL4Ainf8HAn5a2zcy2neGkZEB7DWt1LhVQsD0zBTVFRsw
      GRS6T/fQ0VJfNIGpTqsRWNip0OtLJZOKzs4zc/EccnbuisWwJNFZ5+Dd8+ktqtMJShFC4Js6
      SffBP2N+ujCJbSPBMc68+T8Y6f0pG/f9Ae7qrUhS9neW0m6xeA80JBRZuridJ5HQkkSucDnu
      OnWa1vYNeIrAJfhK2hsr0o7XvSVCcLJvDH88vQfUxpZbpz1JahF63v5fHPrZpwt281+Jf+YM
      h37+Gbrf+gu0RPbTqqQ9AhRjFfW2ljZsZiMmVaauoQ53hZuz3d0EFDuNFgVrfSM21UB331nq
      GhoLbe5VuB0W1jdVcHogf5F1JlWhc031Tf8/ND9E1yt/zNxkceV3FbrGhVNPMD/VRefdX8Xm
      bsla22mXSJoYGabr3cNZ63i1s6ZjIwNBE9/4Uf6u6d3bW/gPj9123WguhMA7/g7HX/x94tHC
      JfJKB9XkYtt9f05F/e1ZmZWk/VhXjcXr0bccUY0m9m1upLYi9345kPLMfHT/+hve/FMXXubd
      Z3+36G9+gERsnqPP/x4TAy9kJSw3bQEYTSaKZgW5AjCZzVhMKp+4b3Nerup9O1pv6P8z0f88
      xw/8AUlt+bi5J7UoJ1/+I8bP/WLJbWUgAPOy8e9YDlisKd/8O7c2s29zbtcndRV2fu3Bzuue
      /tMjB+l69Y/Rk8vvkFNPxul67U+YGnptSSNBRiOAQS1Ng7KBJMuYLakQQVmS+MKHd9FSkxvv
      TKtZ5T99bB9Om+mqv/tnezn+4pdJass3vltPxjhx4A/xz5xZdBsZbYPaHLk/mVsNWKw2FMN7
      G3BOq4nPfmA7FmN2/WGsZpWvfGIfa+uvDopPxPycePmP0OLZrxSfb7REkBMv/xHx6OJc9TOa
      0zjduXlKrTYcTud105HNbVX819++O2u5c+oq7Pz3T9/NtrU1V/Ul9CTdB/+MoHflFDEM+QY4
      8+afouuZZ9XISADu8uL0q1luuMorrhOAJElsaPbw579zP/fuaF30IZlBkXlw9xr+7AsPsK7h
      +n4mBg8wevbni7a9WBk//ywT55+DtBxC3iPtcwBIeYS+9twzpaxwS2TP++7FVXbzXD26EJwf
      9fL0G70cPjNKXEvHyU1h76ZGHr1jPa217hvukWuJEK8/+RGiwZVZzcdsq+KOx36Cakp/qp7R
      pFM1GnGWlTPvLQXHLxaz1YrdebU/jhACEZ9G858iGb6AHpuiNhnmC51JfmujQs+YzoU5Kxfm
      PUxGPMSS6nXZoTvXVGMzqzc9HBJCcO7dv1uxNz9ANDTF2Xf/mg17/yDtQ7KMBCBJEpXVNSUB
      LIFyTxXKxQzRQiRJBnqJzxxA83eDuN7l3ARsrU79wHkk1YXq3oXRcy+yqQrS/KIjgRGGu5/K
      3gcpUkZ6fkLzxo+n7S6R8USzsqauiB3jip/qunoAktExwue/Tvj819DmT9zw5r8RIjFPfPoA
      wd7/TnTsSUQynW1MweCpf0ZLrPyY7qQWYaDrn0h3LZCxAGx2O86y4ktzvRwwmS2UeTzEZ14l
      1PtVkoEzwCLdzPUY8annU+2EBy/n678RsbCX0b5/XVw/y5Dxc78kGkovg2HGApBkmbrG5oyN
      KgG1DQ0kJp4mOvx90LMTYafHJgif+99ogVM33ZwY739uRez5p4uWCDJ27pdpvXZRe23VdfWo
      RtPCLyxxGUmW8RhPEJ96lky36hZCJMOEB/6OZOjGe/ujfT/Lan/LgbGzzyDEwqProgSgGo00
      NLcs5q2rFEG1Yxw5+FruutBjRAb+Fj12dXxBaH5oSa4Cy5WAt5eQb3DB1y3au62xbc1Vx/kl
      bo7JEKbe0YWU5Sf/tQgtQGT4+4grTkSnh98g2yPOcmF6+PUFX7NoARhNZhozrHq4OhE0uvow
      yPkpEp0MnEbzvXt5UTw7eigv/RYjM2l89kULQJIkmte2YzIXZ+GDYsGqBii3phewni1iEz9D
      oJPUYsxPn85r38WEf/rMgt6uS3LwN5pMtK3vWEoTK54a53C6Z1VZQ49NkAx0Ew1NkFgGUV65
      IhH3EwncuvjIkiNc6ppaKKvwLLWZFYnFaqTCVphysom5Q4Tnh9H1/Ey9ihGha4Tmh275miUL
      QJZlNmzdUVoQX4Msy7SvLUNOI/dPLtACPYT9gwXpu5gIL5DQKysxjla7nfZNW7LR1Iqhac1a
      XLYwhdqBEVqAiK+nIH0XE7HQrUfgrAhAkiTqmlqobWjKRnPLHneFh7b1G9Fj1x/Hjw35mAll
      HrgRmAsRSgBJjdGpNEYVoREPDWfcz2LwTkc5dNLPubHYrTwyLtolmPYmCHhjeKO5zzaYiN06
      Uixr8xZZluno3EYoGMDvW70LL7PVypade1AUBaEFr/o/IQRd52aQJ+M8sNPDwHiQmbk4m1rt
      vHPGS0trBTYR53h/kNu2VTM1Os/4TJjGNg/vvtTDvLOaD99VBRr0D/uYmgpTUVdGvR3eOjlD
      yxoPa2qu2JXT8uP8NjWu0dnp4PwxHxNOFSmaYD4s8Fgl+ifirF9rY2YswoRPo6XNhipBLKAR
      UVXK009Vuihyugt0LQZVpXP37ZgtxZWGMF+oqpHOXbdfDnhHXP2kj4fCWD3lyPEYmi74xWtD
      1Nc7efPIBNvXOjk1GuL1E9Ps2+Ti4LEZunt9bN9aTV/fFOvbynjfvgbcFp2+cyFOnvOxaVM1
      g72zKTeLMjOvvn3NE19kt/D2zUjENY6c8DMUBLec5K1TIeqqjKiqhMMscbwnRFurFVUCp0Vm
      aDx/WShuVqvgElnPc2KxWtl2296LeYRWD7KisGXXnqsjveSrs2ic6fYyPRtgdMTP8LxG21oP
      dWVGhKxgM8pIwMT4PK8cnaG8zIjVZsRqMqAoAlm6GDhzcYphsqo4zAoGWeLoiUmcFVYqnNcM
      6HJ+snioRgO7O51sa1AYnNNpa7HiMEmc7o9QVWnCpAiGL4Qpr7diN+Z3T3ihwhs52bpxuNxs
      v30/x95+c1UU1lAMBrbs3ENF1dV5N2X16iQCJreNj+wuR8SinBqJ01SVGim3tNp54dA4Maeb
      B/Y2cHYsgt2q4qxNBcjXV9lp8ph5/sgwFfuqqa81k7hY+b2+1obNpNN1dg6b3XJN/zcPu8wm
      dofEsa4AkpDY3mFgJqiDBJVOhYHRGG6XyvBkFMWUxGG2UlmmYjZBPupgKOqtkwxkFBOcKf55
      H8ffPriii2sbVPXyzX9toFB89nWiQ99dsI3B/hlODQTZsq2O5oosPbVlIxPRJs6f+OfstLdM
      WbP9c7Tv/uJN/z+nm/cOp4ud++/kxOG3CQX8C79hmWEym9m6Zy9Od9kNo+QUaxugALeeh7a0
      eWhpy+5homysxGoundKb7bcu1J3TXIeSJGGzO9h1x/uorCnuiuGZ4iorZ/edd+MqK79piKhs
      rk3F7RYAg6sTq7O0LW113jrtZF6SfRqNJjp3305bx8airDOQKY2ta9ix747L+T1vhiTJqOW3
      58mqq3pGLduL1VmPYlidO3IAsmLCtoAA8ua/IMsybe0dlHsqOXP8XcLB4MJvKjJMRhPr29ZQ
      ZTIjdZ+BWAySSTAYwGQGlwvKK8BqvZytQa24k9jUs5DM3zrI4OxENtdiQmC2VxPyDeSt72LC
      ZK3EbLt5QRDIowAgNSUqq/Bw+1330d/bzfBAP8lkfvaqF40QOJJJ6mJxakNh1DffWPg97jJo
      aYW2NmSXG1PV+4mN/yT3tgJIKqbaD12clkmUVW9ftQIoq9m2YEHugniwKQYDazdupraxmXM9
      p5keH6foopaEwKVptEWilCcSmc0VfXNwfA66TkBzC8YtO0lYjqJHLuTK2ssYq+5Htrw39/c0
      7GWk98c577cY8TTsW/A1BXPhlCQJu9PJ1t23Mz/nZaC3h9npyaJIu6jognXhMPWx2NIWSckk
      9J9HGrqAZd02QpZJELnzDlXs6zHVfPCqRbmnYS+yYlqWNQCWgiSrVDbuX/B1BV+RSpKEu7yC
      7Xv3c9td91Lf3FKwckyKwUCN3cFtwSCNS735r0TTULonsA6sA/3WQ/JikS0NWFq/gHTN6a9q
      cqZ1I6w0PA17UU0LZzPP6UHYYonHYsxMTjA5NsLczExO1wmyLOMqr6C6rp5Kg4r5jdchkv1y
      nAACQdIZJNJyDqFkJy8QgGJbh6X189edPF9i8sIrHH3uS1nrbzmw/f7/RU3bAwu+rigFcAkh
      BFoiwdzsDN7pKXzeWUIB/5KKdkuyjNVmw13uocxTSbmnEqPJhDTvg2d/AeHc3PxXknToRNtH
      SepjS2xJxlh5D6bajyApN/e9SmpR3vzx42mlCVkJWJ2N7P/okxjUhbeAi1oAN0LTNMLBAKFg
      kGg4RDQSJh6Po8XjJHUdoetIsowsy6iqimo0pQrSWW3Y7HasDgcGwzVZlGNReObnqcVrnhB1
      NSS2W4jNvICIZ5psWEK3NqNXPkTUVE1MT83vTbIZu+rAYrBhkA1IV5Tfu3D6B5x580+z+AmK
      l469X6Z1y6+n9dplJ4CsIwS88Tqc7c1/37t2IzatJ+E7SmL2DZKh89wqV2hSsTEimRhQXExg
      JJQMo1/j7qtICjaDgzpbI+2uTbQ41qLKRrR4iDd/9KsLhggud8z2Wu547ClUY3o1AkoCmBiH
      XxSoYorRCB/6MDhdCJFEJPwkI8OpSLJkGCF0JMVEUrFzIjTMyeAgwbSyQb+HQ3Wxy7OPLRW7
      mO5/gRMv/WGOPkxxsOXur9LQ/qG0X7+6BaDr8MtnYDK/eXuuon097L/zhnn+hRAMBfs5MPZz
      5mJLq8ngMVdxf/0HGX3lT5kdfWtJbRUr5bW72fPIN5Gk9HfaCr4NWlCmJlM/heT8OQhdH7oo
      hOCdmYP8ZPCJJd/8ADPRKZ7q/x6J9Xcv6CO/HFEMFjbs/XJGNz+sZgEIAefO3jKvfl5IJmHg
      /FV/EkLnzckDvD7+PMkshjVqIsGhcA/BNXsgL/Xp84VE+57fw1GxPuN3rl4BaBqMFMmCcPA9
      Xx0hBEdn3ubw1OuIHLiHCASDLhehqpWT17Wm7UGaN35sUZWLVq8A/PMQLpKSQXNzEE0tbkfD
      Q7w+8WJObv5LCAlGmjeSdNbkrI984fRsZPOd/2VBp7ebsXoFMFtEhf40DeZ9aHqCF0d+ltVp
      z81IKgrTG+/G4mrJeV+5wuZqYeeDX0c1uRbdxuoVgP/WCZMuMR/w0zsxwZg/x6OF389J7zvM
      3iCZVq7wEsV622exuVvz1me2sDqb2PnQNzDbb+3vvxCrVwBpZqs40nOeS+llZ0IhLkxOEIzH
      OHTuHOPBCJFomIGpSU5PzgKC4alxuiZmSGpxDvcPENbSc9tIRAIcmzm8uM+yBHriI+x8+G9x
      Viyf+GFHeTt7PvDNtEuh3orVKwAtvWlGPBHl7MQkU6EIzxw7wkAgDskE1WXlvNp9huHxfvqC
      goGxEcZnJzjtS1BpNfHiqS5qy8t47lR6+TmH58/hy9glYulMRyfwyQl2f+CbVDbekff+M6Wi
      fi+7P/BNLI66rLS3elM6q+klpbFb3dy3bQMmYHiumrvWNnHy7BlGY9Dv9bKruom15R7GwnME
      EzHK7U7cFhMTc7MEdIVIIr1nzEyycOkku30nqa//IDse/DrDPT9i8NQThOdzH7yTCVZnI82b
      P0nThseRs5hQaPWOAAsEtF+irb7q8lNiU3UVEtBSU4MsSTywoQOPu5IKo0xbTRUt1U0YIjMc
      HZvh3+zeg01V2Nl666DsS8wZs+cenSkXAqlzCFlRad70cfY++j2aN30SSc5D5qoFkGQDTRs/
      xu2P/hMtmz+V1ZsfVrMrxEA/vHyg0FYAqW3JH2yeY8x0fTLdeDiOYjRgUN/b5ovMBlDcDoy3
      2PnTNY1QMI7DnXIJ1hLJq9q4EgmJL23+YwxXpBEUQuCfOUP3wT9nbvI4+Q9ZlXBXbWHDvq/g
      qtyyqD3+dFi9UyCPJ+V/UwT611WViE2Fa5YlFw6fJYYRu8dJbbMT73gAd60L/+AU5s0OCIcJ
      BpOU1TiIhyIEfVFsLjPhkIbTITPaPU5VazVl1XZ8U/NU1LrwjvgwlzmwOd6LHBMIIloIh/G9
      7URJknBVbuK2D36LqeHXGTz5XbwTxyCN2rtLQpIpq95Ka+dvUtl0F/Ii9/fTZfUKwGoDtzt1
      CFVgRFUVmnT9Atgf1Oi8rx2A3ld6cDWW033wApU2EPEo3YdG8FQZmffHme29QP26Ss4fG8Uu
      yRje10RwLoxNHccfqCM2O4e7zIKWhIFDA3Tctx7DFQ/VxE0q10uyQnXz3VQ13olv+hQjvU8z
      OfhS1muPqSY31S330LD+w7iqtiyY1DZbrF4BKEoqdUkRCEBasxYl0Xfd34WemnhIgKYYqFlT
      ydygDyEUtEAQW305dWscnHp3AkeVi8qmciIJCas/QVJAeWMFDRtc9Bz0IxvBO+JlZjyEbzJw
      OZ3RJQwLzPdTKW06cO/+Ehu3/Abe8SNMj72Dd+YMoeDExVpk6Y6mErLBhNXZSEXtLjyNd1Be
      uxPFYMnZVOdmrF4BAKxZC10n094SzQlWK3JjM+YL15ebrWmwc/qVPuzVZbgdBk6/0oe52o0q
      xTGXl5Ho7ePU2DS1W1oIjM8gyTKqWcWgSciKwvzwNF1jPlru6GD23BiKJCGQsDjN13lfm5Ub
      lLtNxsE3CLN9MD8EES9SMo4CVAKVihlRs5uEJBFKxggpKhGjjZgWRYsH0JOpUUWWjRhMDoyW
      cqyOOqzOZmzuFozmG+dUzSerdxEMF6PBXoOz1z9988au3bBlK88MP0WPr6sgJtgNTj6/8fff
      +0MiAmPvwNgRiPoya8xggapN0LQfLBXZNTQHrO4RQJJgx66UN2aiAOVEXS7o2AiShMdcDRRG
      ALW2htQvQoepU3DuOYgHFteYdlE8EydSImjcD4biLZayes8BLmG1wq49+e9XluG2vamwSMCs
      5LhY1i1osa9NPfW7n4YzTy3+5r8SPQGDr8Dx70C4MLWS06EkAEmC9R3Qtia//cASB6QAABAI
      SURBVHZuhfqGy/9stq/FIOX/4Mkom2izNMDJ78Pk8ex3EBiFY9+B+SKJvbiGkgAg9TTefyfU
      Zse/ZEHWtcO2HVfFAbuMZaxxZh7RtFQ6bGuwnXka/DksqRoPQNf3ITBGseWAXfaLYKHr6H4/
      2uwsyelptJlZdL+fZDCESMRTIYeyjKSqyFYbstOOobwcQ2UViqcCxe1GurQfGI+nTodHc/i0
      Wt8Bt+8F5frl13RkgifOfTMv8QAARsnAr8XclAVm8tIfZjfs+CyYnPnpLw2WnQCEEGgTE0RP
      nyHW00P8fD9Jnw8RyTz/vmQ0IjudGFuaMbW3Y9q0EWNjA9LRd6H7THZPiWU5teDevCX1+014
      dfw53pl+M3v93oL9CRu35zrO4Voq2mHLp26YBaMQLAsBiGSSxMgI4bcPET50CG18IjcuDJKE
      7HJh3bkTa2M9prlZpGzkCa2sSi14KysX/OITeoIn+7/DeDi3Vd4blTIem/Ej67euX5YTNnwU
      arbmv98bUNQC0MNhwocOE3zpZeLnzuXdb8dQWYm9oRabpwIl0weWJKWqxWzekjpxVtL3afHH
      fTzV/13mchQf4DFX81jUhm22PyftL4ilAnb/DiiFyQJ+JUUpAD0cIfD88wRfeJFkEcTuymYT
      1vZ2nJ2bMCQSMO9LJdW6FkWBsvLUYrqlJSWADG78K5mLzfL04BN4Y9mdn1eZa3i06iGcJ/45
      tVVZKDZ8BGq2Fa7/ixSVAPR4nNDLLzP/k6fRfenF7OYTyWTCfv99OB/5AIosXV8jzGZLze+z
      NL8NayGeH/kp5/3pRZXdCgmJdtcmHmj4EKaht2Dw5SxYuATcLbDtt0Aq7EZkUQhACEGsu5u5
      7/0TicHiikS6EUp5Ga7HH8d25x1Ii3zCp4sukpyZO8nByZcIJBb3UHAZy9hffR/r3ZuRhYB3
      /x6CBUwHCakbf+9/KviOUMEFoEdj+H7wA4IvHiisU1qmSBLmbVsp/9xnMZSX57y7aDJC99wJ
      urxHmY6md/PWWOrZXL6DDe5OjJfqB0Tn4e2vgSjA4vdaNv4qVG8pqAkFE4AQgsTQELN/9Tck
      hnO745FLZKeT8s99BsuuXTn3bNSTCRLxABNz3fR7TzIdHieqSAijFdVox2J04zKWUWmpptHW
      ist4A2/L2bNw8p9yamfaNO2HNQ8V1ISCOMMJIQi/eRDvt7+DuEFi2OWE7vcz87Vv4PzQB3F9
      9CPvHaplq/1knLmJ44z3P8fcxFHC/uHLbsaOiz+SJGOyVeOu6qS69T4qPetQbza1iCy8qaAn
      NV47PsiwN0JNVTn3bq3n2oleNBSg15tga+MSRr+wd/HvzRJ5HwGEEPif/inzT/0otYBcQVj3
      76P8c59FNi/dsU0InfHzz9J//FsEvGfJxIXAZK2kedMnaN78yevLBA28nPYC+Aev9/LxO9dz
      tn+G1rYKTp8bx2kzMzblw2GzEBAyLqHR3FzJwWMDqHYna90ylgoPsalpTDXVVJpuMSq6mmHH
      Z9L+XLkgr0twoWnMffd7zP/LD1fczQ8QfvMg03/xP0kGgwu/+CYIIQjNX+DwM5/jxEt/SMDb
      R6b+M7HwNH1HvsGbTz3G9PDBq0vPLmLrc3zSTxIYGJ9jcnIW3eZmbaWFt472MYuJsYFhTBWV
      xKdmSBiNHD07zfExPxXGBaaEhdyGvUjeBCCSSea+/R2Czz6Xry4LQuz0Gab/4n+iL1IEM8Nv
      8PZPfwPv2JEl2xIOjPDuc79L/4lvIS6d+C4i1YkudBJxjblQAoxGOupcSBLs2tDA+LgPxSAz
      MDqLyWnFU+aGwCyyyYq80JKoCA7C8iIAIQS+7z9B8MBL+eiu4MR7+5j+2tfRM/RPmhh4kaMv
      /mfiWQw4F7pG3+Fv0Hfk/yCEDmlUTrzErrWpvJtb2it469QYO9bX01pbjt0ooZotdDRXc9+G
      chw19WyqUFEsVmwGCbdJYW1L1cIdZGBLrsj5GuDynP9ffpjLbooSy57deL74u0hpZKGbmzjG
      kV98gaSWuVNfuqzf8x9obboL6cR3c9ZHNBzm9Z5Z7tvegLzQrljznZBGLd9cktMRQAhB+K23
      UwveVUjk8BF8//JDFnrGCD3JwMnv5vTmB+h756+Y8w9BDlOOmK1WHtjRuPDND+Coz5kd6ZJT
      AWgjo3j/4R9X5II3XQK/+CXht96+5WsmL7zMZB5cE4Sucfrw19FM6ZUQzSmSAq6mQluROwHo
      0Sgzf/XXiDxUXi9qdJ25b32LxNiNq8IntRi9h/6SfEVKBX39jM6dy0tft6SsDYqgWF9OBCCE
      YP7Jp0hcKH6/nnygB0N4/+8/IG6QeWJi4AXCuQxHvAFD06cp+Jhcu70ogmJyIoB4Xx+B51/I
      RdPLllh3z3W7YEIIRvv+Ne+2BKNe5m6SCjEv2KpgERUdc0HWBSASCbzf/m5h8uwUOb4fPol2
      RXxDLDyNb+pkQWyZEBqiIKlYJGi7H7Kc5nyxZF0AoVdfIzE4mO1mVwQiHGb+h09d3hXyz/aQ
      TBRmjeSd7YM19+e/46pNRfP0hywLQI9EmH/66Ww2ueIIHzx4eW0U9Ga4GBXisnjExd+v/MnI
      Dv8QevUWqMqjO7LVA+2PFMXc/xJZFUDwwEskZwofwljMiESC+Z/8FCEEkUyDUpJJDh5PjRhv
      HvcT9kY4Pa1zti/AqC+zZa0QOrHwLHQ8mtqRyTUmJ2z5ZFGc/l5J1gSgRyIESwvftIi88w7a
      2BjJxNJdwQcHgsxLKg1lmR9uaYlwyh9n08ehfO2Sbbkp5jLo/PXUCFBkZE0AkXffRZvKX43b
      ZU0ySeC5F5AyPZGVUrUCLmXHkACXw0Aslsx4CgS8V31FNcPmj0PD7RdbzSJlbbD907DEer65
      IisCELpO8MXV4eiWLcIHD6LoGe6EKApWRePtk35MFhVFlqiqMtPmkjg/lXk46VUV1hUjrHsY
      tv46WCszbuv6xq2w7ldST37z4iu555qsOIVoExPEenuz0dSqQQ8GkfqmM3zgSmzrvPpmSu2n
      ZH6iqqg2jJZro7mk1FRo1+dhsgtGD2UePG9yQs12qN8DxeBysQBZEUD47UNFUWxuuaH2B2CN
      RCESxro8G7ip+hQj1O1M5e0JjqcqxPgGITSVSqN+1WtVsFaAsyklnrLWi3v8xbPTcyuWLAAh
      BOFDh7Nhy6pDnUxgbLMRlxYfQbZYPA17Fw7ilxVwNqR+IPWQS8ZAi6Z+V4ygWgqe22cpLNny
      5PT0TR29StwaKZrEFa3Nf7+ygeqW+xbxRgkM5lSWZ0sZGG3L+uaHLAgg2tNTcntYAp7Y2sx3
      g5baZ/1ebO6WvPZZrCxZALGe0uJ3KZhmZaqb7slbf5Ks0rb9M0jL/MmdLZZ0FYSuE+8vUIbh
      FUJidJR1nZ/HYMzPjkn9ukcoq96el76WA0sSgB4Ol1wfloqmoQYkWjt/I+ddWV1NdNz++wWv
      zVtMLE0APt+i03+UeI/EyCjNmz5JWXXu0oUbLR52PPCXqMtgbz6fLEkA2nTxlr9cTmhT06gm
      B9sf+EvcORCByVrJzoe+hqN8XdbbXu4sTQCl6U9WSM6mimCYrBXsevhvqFv3CNk6SHJVbuK2
      D34Ld1VnVtpbaSxp/00PZKGgcgmS/veuo2q003n3V6lquovew18nElhcxUqD0UFr52/Q2vmb
      KIbCFeEudpYmgGKb/0sKss2EHgwjO53ofj+GplakRJDE+DQoRgwVdrSpwmclvhI9dPV1lCSZ
      2jUP4WnYx9jZnzPc+xMCs+lViTHbaqhd+zDNmz6OxZ7/Q7blxpIEcKMsBwXFYMe8sZHw4VOY
      OjvRvCFk/yhJxYRkkFGa27Gs8xB47pWiqtd8s+uomhw0b/4EjRt/lZBvgNnRQ/hnewjPD5GI
      BxBCx6DasDjqsJetpaJuN67KjciKubTTkyZLE0CRJ7xKjk9g3LYeMTiApukYysxE+qZQK+wk
      Zopo9NJufR1l2YCjfF1pEZsDlrQIluTc1sfKGF27nPZPkgS6b4LQy28gVTVjKKtAra1CrXCi
      rslDCGAm5LjOWImbs6QRQFILUmDm5iRDaH4dy+49aMP9yJX1mFqqQQuhmR1EXn0BzZ/AuL54
      shJAEV7HVcSSrrxsK3xqu2uJn7k6z05k6vpdlHiRBe8U43VcLSxpCiQ7SqeK2aB0HQvHkgSg
      VFRky45VjaF0HQvGkgRgqMxC8HSJ0nUsIEsbAcrcSNbiSnS0HDHU1xXahFXL0tYANlteqqSv
      aGQZtaGh0FasWpZ2DqAoGNtas2XLqsRQW4tcGkULxpLj4ozt7dmwY9ViWrsGSS6FJxaKJV95
      84aO0knmEjBv3lxU2ZJXG0sWgKG2FkN1ceZ9LHYkkwnTho5Cm7GqWbIAJFnGumtnNmxZdRjX
      tJXOUgpMViaf1n17s9HMqsO6N43sbCVySlYEoDY1YWwt7QZlgmQxY71tT6HNWPVkRQCSLGO7
      5+5sNLVqsOzaheJ0FtqMVU/W9t+s+/aiuN3Zam5lI0k4H35/oa0oQRYFoNjt2O7NX4q/5Yy5
      cwtqS0uhzShBlovkOR56sOTauxCyjPPRR0uHX0VCVr8FxeXC8cgHstnkisOyYwemjuKKSFvN
      ZP0x5HjoQQw1NdludkUgGY24P/Gx0tO/iMj6NyGbzbh/7VNQ+pKvw/GBX0Gtry+0GSWuICd3
      qWXHdmz79+ei6WWL2tSI88OPFtqMEteQEwFIsoz71z+FoboqF80vOySzifJ/+zlkk6nQppS4
      hpzNUxSnk/IvfB4MpZQfrscfx7hmTaHNKHEDcjpRN3V0UPZrn1rV7r7WO+/A8f6HSj4/RUpO
      BSBJEvYHH8D+0IO57KZoMW3ooPzTv13a9Slicv7NSLJM2ac+iWWVOX6pjY14vvRFZIul0KaU
      uAV5eTRJqorn3/87LDtWR3E2Q10tlX/4FZSyskKbUmIBJCFE3hKF69Eos3/790QOHcpXl3lH
      bWqi8iu/j8HjKbQpJdIgrwIAEPE4c9/9HsEDL+Wz27xg2tCB50tfLD35lxF5FwCk6gsHfv4M
      viefWhlV5iUJ6513UP6ZT5f2+pcZBREAgBCC6MkuvH//TZLe4ipZlAmS2Yz7449jf/DB0m7P
      MqRgAriE5vUy94/fIvLu0UKasSjUpkYqfucLqC0tpX3+ZUrBBQCpKVH4rbfxPfEESe9coc1Z
      EMlsxvnBR3B+8BEko7HQ5pRYAkUhgEsk/X78P/0ZwQMHENFooc25HkXBsmsX7o8/jlpbqsC4
      EigqAUBqbaBNTRH4158Reu31oqlEad6xHdeHP4yxlMpwRVF0AriEEALd5yPwwouEXnud5MxM
      3m2Q7XYse3bjeP9DqI2NpXn+CqRoBXAleixGtOsU4bffJnqyC93vz1lfktmMaf16rLffhmXX
      TpRSjPOKZlkI4DJCoIfDxAcGiHadItrTQ6J/YGnTJElCbWrE1N6OefMmTB0dyE5n6Wm/Svj/
      79eDHd5aZcsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid19 Data Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mortality by Country - Top Mortality rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries with highest deaths' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Tota confirmed cases by country - horizontal' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Tota confirmed cases by country - vertical' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dd4wk2X3fP1XVOXdPT85x886mu+UFLsk7Uscg6STSB1OWaFmQaFiwZDgI
      hkEBEgTagGUbMkQHiXSgZQOWbJCCBJmKDMe9vTvezYaZ3ZnZyTlP55yqyn/Mpr7Z7p7Znemb
      u34fYIDpV6/q/V73+9aLv/ckXdd1BIIaRX6/DRAI3k+EAAQ1jRCAoKYRAhDUNEIAgppGCEBQ
      0wgBCGqaqgtATDsIjhJVF4CqqtVOUiAoiWgCCWoaIQBBTSMEIKhphAAENY2h2gkuLCzw7rvv
      7go/ceIE58+fr7Y5ghrniQWg6xrJRAJdMuCwW8llUqSzeYxmKyZFR8WAxWRALeTI5nVsVjMA
      b7zxBv/uf30XV0Png2cVcmk+1nNTCEBQdZ5YAPlUjNWNILnoNs72E2zP3aG+uQ27S2Z9Y5LV
      uJkrl8+yMH6T6YiJT1+58OBeT3MP/s5TDz7nUnFg8qkyIhA8CU8sAJPdjdsaYSmo02w1saHm
      CYfDWF0+JMWCRS6QV1XiBRmvVUHXdTRNKzkRpus6hULhiTMiEDwJT9UH8Pj8ZJIxgtEEH3nx
      E2hqnneGbtLgtdHV5GJ2bgGzs4FsJAqALMtIkvTYZ0mShCyLPrmgujyxAGLb60wvb0Ihg98D
      d27eJI+GzV2PLKexN3Qy/Fff4aOffoXxeKJkwX8UIQBBtXliAbjqW7hY3/IwoLF+V5xXfvJV
      AC5dOP2kyQgEh4p45QpqGiEAQU0jBCCoaYQABDWNEICgphECENQ0QgCCmkYIQFDTVH05dCnW
      19f5qc9/AcVgLgrv6+7gt3/7X79PVgk+7BwZASSTSSbDZgZe+Mmi8Ft3vvU+WSSoBUQTSFDT
      CAEIapqn8AjT0VQVXZJQZBnQUVUNRVHurfmXkGUJXdfQNFAUoTXB0eMpPMIijM8sk0tGae4f
      ZHvuNrLRjGxvwJrfYC1p5crlsyyOvstY0MDnPn7pIO0WCA6Ep/AI89DVlmdhLo3RmKOAm2fP
      n+LdoevY3TbMcoGCqhLOSfjtRnRdf/D3OEpumajrYjc5waHxlO0SCZvVRCqV5b3+Lp31DuaX
      VzA7/E+XhEBwiDy5R1hgg8W1AHouixMrBmIM37qJzdsEWhRHUyfDf/FnvPiZzzJ+ZwpJkh78
      PY6SHmOShKIoT2qmQFCWJxaAs66JU576nQIqy9D83INOMLQBEq+8+tPIksQzF88cnMUCwQHy
      xAKQJAmD4dHbJQwG+cH/9+MAyHvwBxYI3g/E2KSgphECENQ0QgCCmkYIQFDTCAEIahohAEFN
      IwQgqGmEAAQ1jRCAoKYpKYBYLMbY2Fg1bREIqk5JAYRCIYaGhlhfX6+mPQJBVanYBPr617/O
      /Pz87gu6TmBjhfmlVTRdJ7S1xsTEBGtbIZLRIMFoCoBcKsb6dvjADRcIDoKSArDZbHR2dnLy
      5EmGhoZ2Xc8mQiRUEzY1yt3FLeYXV+nq6sLvdbGxvsz43Sl0XWd+aoy7M4uHmgmB4EkpuRq0
      oaGBhoaGkjeanXW0mVLcujlF96keVgJ5xsdH8TZ0gKRgM6pkCgXSugG7QUK/59n1JB5h+Xx+
      f7kSCPZISQHsPtBOKnJsV3NJfvTuLc5cfAa3zYjvwnPIks6P3h2i3mOjq83H5Ng4Nm8r2e3t
      B8unn8Qhxmg0PlHmBIJKlBTAyNvf5Xs/fItQzkyr30YgZ+M3/+mXH1yPbS2Txcj81F1au7rZ
      Wpgjq6n4Gtoxyyms3lYS4zOcOH2CfCpZlcwIBPulpADOv/Bj2OUsb277+flPn+G3/s1/Lrru
      bTvOy20PP9ef233I9YufeAmAUyf7D8hcgeBgKTsK1HfxE5gDw/zOf/g6n/j0T1TLJoGgapQV
      QCGfI5NT6Tx5lsDyXLVsEgiqRlkBzI28gdL+LH6rxOjd0WrZJBBUjbIC6D79HMnZN7n6w2tc
      ev6T1bJJIKgaZQWQiGyTzGo0NDQSCgWqZZNAUDXKbouSjm7TcvJ5Pv/SOSRZbE4l+PBRVgCa
      Dtd/+JfEloZxNPbwpc+/Ui27BIKqUFYABoNC58BpPv7CaQxWZ7VsEgiqRtk+gNndwkCri9XV
      VTa2Q9WySSCoGmVrgGx8k42UiV/4/Cd27f4sEHwYKCsA2ehg8u1v8+9XRvG29PILr322WnYJ
      BFWhpACWF2YxWj189id2Tm00u8Q+/4IPHyX7AJFwkFQqhWyy4fV6cTntxRF0nVg4wMZ2EE3X
      KeTSrK1vUtB0MskY8VQWgEI2RSiaONRMCARPSskaYPLWWyxux5CbBrlyug2pUHxMUTYRYiOc
      xJgNM5XWiC5P0N7RyvDoNB5jnLWogY9+ZJD5idssxM186sXdq0UFgvebkgL43Gtf4k/+8A9Y
      zyUJhUKY1eKoZmcd/TY3t64v09IEcYOXlrZuVtaHkMxWLIYCuUKBpCrjMstP5RH2q7/6qyQS
      u2uRb3zjG/vIqkCwm5ICsDrr+PzP/Dzfe/0a6XQa3ZIruq4VMrz95jscv/AsPofMsrSGjsb9
      wzF6Wj1MTU1jcTeTDe0MoSqK8kQeYT+4PkXPx/9eUfDIn3/9PQd0CAT7p2wJWhx7m8WEhc8+
      fxzFbCu6FlmbI6GbWZ6dROvqx2EucOP6dXzN3RjzYay+drZH/obnX36JiWSidAHfI4+7/2mf
      KRCUFYDT62f+z/6aH+Y3sfk7+Fuf/fiDa76Ok7zS8TBuvefiI3fuONO/9OnPAHDu7IkDM1gg
      OEjKCqC+5zz/7B+2EoilaWtrKxdVIPhAUnYpxNbcCN/686usLs7yB3/0x9WySSCoGmUFYFAk
      gqEICnmSabE3j+DDR8kmUC4VJSI38eUvfpq1rRCf+thANe0SCKpCyRpgc+Y6b9xeprmjlwvn
      zvKd//en1bRLIKgKJWsAf8cJlr/1DX7g04msjuNvP1VNuwSCqlCyBrB6mvkX//wfY1FUes69
      xD/42c9V0y6BoCqUGQaVsDg8PPfClepZIxBUmZICuPXmX/P2yMyDz47GHv7uFz5dFaMEgmpR
      UgCDz73MmcsvPfgslh0IPoyUFIAsK8TWJ/mPv/ffSSkWFGcHX/21X6ymbQLBoVN2Imx9/i4D
      z17h4z/2GhYtUi2bBIKqUXYtUPuxC6S38wQm36br2GDRNU3NMz12G93dwvHOZu6OXCerG/A2
      tGLIbBHIORg83klgaYLJgMQLF44dakYEgiehZA2QzyR5+/W/4MbkCgODlxkbec85YbpOS3s7
      hdyOn0AwmqCxqYXWRj+ZvEYituMquboVQVYzh5oJgeBJKVkDpKPbjM+uElbyvJVe4wuvfbHo
      umwwYTUbgTQAZ06fJplOcv3WbeqdMg0OE5uRKLLZgZxRn8ojDB5/TZwdJnhaSgrA1djFr/za
      V3j79e8xuxGn0V9X5jE5ook8zY11zC9tA2aaOjt59wevc+qjn2Bxavapzgi772X2XsTZYYKn
      pWwneOn2G9xcl/iJly/z+//lvxZdy6UijE4tkk+EWNtO4bLBxPQyFy+dp7GlA6vFwalLz9Do
      stLf23WYeRAInpjyHmGeOiKrb/CjoSRuT33RNZPNw7lz5x4J8eDxN+/8a3QD0NTUBIDP5z44
      iwWCA6SkAKKb82xILfzyz3+e7UiKlz7TV027BIKqULIJFF6Z5E//8vssrW2RTiWYnl2oolkC
      QXUo2wRKJeKE7m1p8t59gQSCDwMlS7WnuY/Xfuos5/pbqmmPQFBVSgugpY9zpS4KBB8Syg6D
      CgQfdoQABDWNEICgphECENQ0QgCCmkYIQFDTCAEIaponFoCuqcyMDzO9vAXAytwkN64PsR6M
      s744wfjMKgDhtRneuT1T7lECwfvGkwtAzeNvaCabSQN5VrcSXLhwjuXZKVKZPOHgJpqus7QW
      QMsmD9BkgeDgeOIFPrLRgsOWhnAGyCJJViTZABQAE3V2I4F4AslkQ87qwiNMcCQ5oBVuNlQ1
      Qi4TB2XnKKWWrg5uXrtG/7MvsDI7LzzCBEeSJxZALhVhfHKegqaztu3mzIl+JqaXOHX6BGo6
      htXqovvESVq8doyd4nQZwdHkiQVgsnk4d/5CUdhZ7z2vMbMPgM7OTgAaGsr5EwsE7x9iGFRQ
      0wgBCGoaIQBBTSMEIKhphAAENY0QgKCmEQIQ1DRCAIKaRghAUNN8oHe7+unPf4EbM4GisERo
      nV/8mVeZX1pBkh7qW9c0vvSzX+TVV1+ttpmCI8wHWgCK0cL5H//lorCFW99lenqaeOMVHHUP
      N/WKbS1x9epV5ubmdj2nv7+fkydP7go3GAx0dHQcvOGCI8MHWgD7ZXZ2lu8MLdHUf6kovO6t
      /8n3rl2nqf9iUbgWmmVq9GY1TRRUmQMTwK13riGZHXgbWtFiy2yk7Tx3/hhrU7cYC8h86vnB
      yg+pAlZXHe7GzqIwKX4Ld1M3x178QlH40tU/qKZpgveBAxNAKBKhobWOxnofq/EN9HwSVdPY
      jGVxGa2lHV6eioN5ZjnTvv/97xMOh3eFf+Yzn8FqtR5I+oL3jwMTwMuv/Dj5TIIfDd2gpc5K
      m9fK8tY2JpuHXDILgKZpB+oRtt9nlQ7XHh+Ozm/+q39Dzne2KHx1/E2Ghoa4OzXLo846mlbg
      n/yjX+HKlSuPfZ7g6HFAAsgxPbGIw2nGZN55K3rbunjrr/6SZz71CtPj00iShKIoB+oR9ugo
      z16eVSpclks8Bwmj2Yqvv9jvIbIxy8TEBPneVzGaH9YCgbkRrl69ys2bu/sNZ86coaenZ1e4
      xWKhvb39sekLDp8DEoCJ9vYmwvE0F8+1oxWyKEYzz7/8SZw2C2dO184ZwcPDw8xn6/G1DTwI
      U/NZrl37Pd4cnsHfeaoofp0U5Nrr3622mYJ7HFgTyGJ30mx37nxQLAA4nTufbVbLQSXzgcDm
      9uOqf/hWz2dTEAFf+3EGXvjporiJ4f/LV77yFaLR6K7nfO1rX0NRlEO3t5apqWHQo8p3fniD
      tuf/TlHYnb/6JsGf+zluTG0VhaeiW/yf//F7vPjii9U08UOLEMARQJJkDEZzcZgsU1B1Tr7y
      5aLwpZHX+fa3v82//Z2vIckPawddV/m5L77Ga6+9VhWbPywIAXwAmZ+fJ+Z/HlfDw1nqeHD1
      sbPcgvIIAXyIGB4e5uJHrmCyF5/LfPFkF2+89Q42T2NRuFnP8Pr3/6aaJh45hAA+RKTTaQre
      Y7Sdf7kofHPuzwjnbXRd/tmi8LnXv8nbb79NJBLZ9awrV65gt9sP1d6jgBBAjfPrv/kvidmL
      D0Ffnxzil177FFMzc0UzMLqu8fe//Etcvnx513MMBgMmk+mQrT14hABqHIPJQuuJ54rCkqEN
      RkZGyHZ/DpPV+SB8e2GU3/3d3+Xt0UVs7voH4bqm8cqzvfzGb/zGrucbjUYaGhoOLwNPiRCA
      YN90nf8UTY/Mjqv5HJvTf8yZyy/h7yxeVu4lxJd+5rXHznMMDAwwNTW15/Bnn32Wlpbd51Y7
      HI4HuxDulwMTwMTtGySyBdyNXRjTa2xm7FweHGB9eoSxgMwnnztzUEkJjij+jhOc+NjfLgqL
      3Pgj/tv//hN8Z3+8KHzy2rd49tgtovXF8xkb09fpHxpizdCH0/9wT9l0LMDQ0H/inbur+FqL
      Vxb0ulKcPD5AoVAoCrdarXz1q18ta/MBCSBDLK3wzLPnGBq6SZ3bgppNoGoaG9E0DoNYNVnL
      KEYTDl9TUZjRbAOkXeFmuxtIYHXVFV2TJAlSUN91mu6LrxTdI0//KX/0529y/KUvFYXP/8Uf
      8lu/pZFM54rCTUYFs2lnZ/EDEoCKhBEJmfsrN1s9FlYCQYxWN7lUrvztAsFTIitGzDbXe8IM
      FFSN5c1QUXid20FjnZGpxY2Dcoq3oalhNtYWMVg9APjau5l86xrNXU/WNhMIDhudA6sBJC5e
      vMBGIMrZU52ouQwGk4XLn3gJt82C5eRA5UcIBO8Dkn44rlol+eY3v8mv//bvY3U9PDNALeQ5
      12Hn6vW7eFt6i+K3OwssLK2ieItrku2FO7z80cvcXk4Vhce2lnnhXC8358IYLQ8ncnKpOBf7
      6njr9lxR5wrgbJuV710bor7rdFG4nFijwe9jI1O8mjW8Os2VZ04xspxCVh6+Q1LRAJdPtPDO
      3TVsbv+DcE0tMNhu4+rQGN7W/qJnNVkzbG4F0Z2t78nfKJ/86LOMvCd/8cAKz5/t4cZssGiI
      Mp9JcqHHy5sjs0UrUQEG22189+o71HcXD0SokSU625pZSRSftBNem+XKpRMMLyVRDA+vpWNB
      nj3ezDvjK9g8D4c2dU3jbJuFH747WrQMHMBvSBBLJMlZimehA4tjvPT8RW6vZorCE8E1njvT
      xfXpAGb7wyZNPpviQreHa7emd7m0nmw28+a7t/C2F49AZQNzzE2OMrNcvKBwpwnkYnJxo3oC
      uH9GWCaTIZPJ7LquKAqqqu4Kl2UZXdcf681V6p6DCpckCUmS0LTdHmMHlYbI3+HlD8Dldu9y
      KJSk+96BUvVrAE3THuuBVS78/g/1KPe/1P0+az/h1UijVP6qkYbIn1x9AVREV1lZWiSeyqEY
      LfT2dqGU8Ja8TyISZGV9p5prbOvC6yw97JqOBompJhp9TrRCnrmFZXp6e5ArpBENbrK2FUJC
      orWrB6e1/LS/phaIRCJo+s5sq8flKJ+ArpNMxEhnd06+dHt9GJXyYxT5TJKFxWU0JOzuOtqa
      /GXjo2sszU4RiKdxeOoZ6K58dls+k2JmZgZPfRNWmxNPme8WQC9kiSQLFJIBwlmF/u62Eg6t
      D+4gGX+YbwCj2YrbWXodkpZPEcvIpEIrZBUHXW1NFdKATCpBIrXT8nC4PFhMO03XI7c1YnR1
      hogqk0oVSMXCPN5d/VE0JqfnSMbj+FxGtsOpsrEtLg/R9VmGb48ydP0GHn9jxcIPBaZmlkjE
      4zhMGtFk5WHd5ekxtqJJMpkMuVzl41w1Lcft22P3mohZtD28lqYmJlATEcw+P8FAqGL8bCJE
      TLVw/vx5pOgmsULFW7g7Pkadz00ilWJpfrli/PjWMqFMgYXVbYhtk3p8y+QRdMbHdvKdCK5w
      d3aNXL68YcHFaWL5PGvhDMnAOoWKhUTl9sht0vea3+ojTb4jJwCLzY7D7kXNRkhn82W3LNlB
      wuly4ffYWNkMI5XY4eE++VQCTbGwtTCFZHUSjYb3kIaCy+PGYzOyEYpDhTQADEaFXF5DURTk
      Cm9y2HGKUTUVRVF2Ng+oeAfYHE5aOltZnVtA3YNgjBY76cgG42NjbKU1bHvwtnTaLczNLzA/
      M4PF7akY317XSGTpLo0dfSg2B5aKWZcwGxUsTg8Ohx2vz0+9z132Dk9zO2tT47R3dmGxO8u2
      EDQ1z+bGFulcDkVWdm3McKSaQI+aoqkFNGQMikKpDSNAf6Tw6uRyBUwmY+kdJgBNVck9csC2
      JMmYTKYyady7T9PQdY18voDZbC6bhq7rZNNJovEUkrRTpXvdzpLxd+7RCG5v3yvIEl6/H1MZ
      4Tz6XRXyOWSDCaVCVaZrBcLRJDarmVQ6jdfjrZhvXdfIZrLokozZZEIuk0Zke42F1U10XUKS
      QDZYOHHyOMYKIlALORbn55EsLjpbm8qmsZOPPKMjIxSMTvxuO21tbSXzoakFQqEQqqYjSRK6
      ruPy+rAe7EzwwZBLxUikc6yuru1MUphsHDvWj6HM9xEMBkmEt4nem21u6eyl3lO6vZ1NhLg5
      urPQSpIkmjv76WqtLxl/B5V3rl3F7qkDJDp6B/DYzSVjJ8JB0oU8Gxs7/RKbq66iANA1Fuam
      CISTGA0KF1/8OCZr6ZITDQXJZlNsbO9s2uWua6KrrbFkfIBsPMhmKM+JXjebU3fB6cVXoQSM
      3nwXzWhDAuqa2mht8JWM66lvobeQJqA00N3gYHJ0dA9NWJ2p8Tssr23hsJrISmaOt5VOAyA4
      fxdX12miS9MkQhnyrW2YSpQRWTHgr/dz584YPovE3HaUzt4zdDQeQQEkE3GWVtbJ6womg0w2
      m61wh4Tf70eRZVrbjYxPzGOzle+kWd31vPDC/QKvM3LzFlpLfYWOtoTBYqOrq2vnGebyX5vT
      58eayxCPRMnr7GlnB10rYLLX0Wiy0+iyks4V8FiNJeN76vzEI2FOnGphYXIcm91WMQ2zw0du
      5hY3b25RwET7Hn59STbQ1tGFUQaTufLuHla3j407U5jyjUQSmT30r3SymkJnWxNNXR0szEeg
      ggA8rV1M37xJJByhtWegYg0DO535haTM+WMdbDzShztSAvA1tiFlYsRcvXR6TUzeuYNKJSM1
      FheXsSgq7d1tzM+scPpk6eUX+XSC1c2dLdU1NU9aU/bUEWpuqCcYDAISDSYrRkP5Qr08M0Gu
      AAZ/G5GtNehoLhtfUsz0dHdQSMdZCcQ57qxc2BYXF+hocpG1NrC2uEiD93TJuJqaJxZP4q3z
      U9BAkhRUDUrsCfaAlpZmwqEgsgQurx+Lufzol8Hm5ZnzpwhF4py/dAFjRQFI9PX1YZI1JmcW
      6Rk4XukGFLOdzvZWmltaUExWdJ0KTTmZkyeOsbIRRlXstLV4H9pbMbUq42pqY+LmMHGnnXSO
      ss2fHSTcdoVozoJFK+BpKN+ckRTDA1c/SZZp7+yp8OVpBAIh0qkkyZwKSHjrm4DSb2cAm9OJ
      0+pgcmYeo6lyYda1PHdG7/KRjzyDp768WO7TVO9jfCHA4Llm1uTywy2SrGCz2VBkCU3faf5V
      Gl4OBgLkshnisTgARlv5zilAJrrJ9bEFHDYzm9tBjp+o3Ae4O3aHs5cuc+bs3pbMhxbuElEa
      afEYkRTDHgYMNMbHJ1AKORS7CTWu0de+M2R85ASgmJxcunSeQkHFYDDu6e1ssnkYaDRx++48
      fafLj4UbTBbq6/ezUZeM3+/DYDDR73GRz6bIaZWtamjrIZWIcXygD7e7csGRJBklG+aNt4bw
      OCz0HjuBvUJTy+FyYZQ3WFrewl6hCSRJMrKeZ2l5nb6+Du7eGWfg3CVsZZKo8/tR804K+jqq
      DtYKb38ASVepa+5koGPnRVS5CQQ+h4nXf/AGzQ1eGtu6afSV7y9ZnQ62p1ex614UowWnw1FR
      BIWCisNiIRoO4/Y+nP84UqNAAImtBW7Nh/DaTSgmK/19vRjKljeN4Vu3kbQCfSd7mZ+LcvpU
      1wFapBOPBbhzZ57jJ/qIbK0gudrobinfTl2fG2cjbcBrhUBC49LZclW7xuLsDJnC/Z9CpqO7
      B6upfDPrzvAN+k8eY2ZqBbVQYPBc6SYQ7IwcbSzc5c0bk1z++Mu0+11l4wMMX38HvVDA09JC
      MmvgdH/5fUzz6TjjkzMoBiOK0UJff1+ZGkAnn8tRUB92lQ1GU9nmpa5pqIU88eTOfI+sGHE5
      HSVrcV1TSSSSFPIZZmfmsHkb6evpwHQvjSNXAxiMCjaHh/a2OiRZ2cMbRKa53k2sYELO5Wnu
      bK10w77JJNMoBplEIoHV20JTmZGQ+xRUFZ+vAY/NyPrGOLFYHIfTWSI/Ei63F9sjryJDpfYJ
      0NbcwPDNESLhBANnL1SMr+ZSZGQ3X/jCq8xPTZL2uLBWKAEmqwO/08BGIoOuV64BFEVG01Qi
      wQSK0Uxff/n4GysLbIUTDz63dPbTXEaY2USUZEFldWUNAKPFidNZugbQtAKh4BZT0wv09vWQ
      CK2xtOmhr3WnH3DkBKBYfXitm4TDYRSjGbujwhICNBLxBJFEho2ZAI0nn6POUXnCZu9I1De3
      E4/FCIVCQBir3YHHUb4Z5WtoZTMUJZyVaGxqJBKLY3eWqtolvP5KQ7GPu03GbLbR1GyvOAEI
      oBhMxIPr/GBhgfYmPxX68QA0t7Tg8bgxhSPY9zARFt9ew9PWg7y2js2gktfL9ZYk2nuOsZ+9
      sS0uL2ZdJx2PksppNLW2lH1JKgYznd09bG9uU9/UgkXKkHrkuzpSAsilogzfHn8wq2m0OGhq
      bq7QWZPpPXGGXkDNhhibiULLQQoAQCOW1hgcHCw7AXafZHiDuO6k0W3h9tQSdU3t9LTtduZ+
      WtY2tjl99hzGPdQWANlkGNnZQJMhjJxJkVDBW6EEBNbmSeR7aN9DrQfg9DeTS0nkDDliqome
      Q1hrEF2eIIKfnhYL42OjnL90sWIZGTx3lvmFeczOOnoeab4eKQEYrS4uPvPsIyHSnsaRF2cm
      iaZyaJpG98Duw+6eHol0LMidO3fYmQjrx2MvXQOENjewdTUydWeU85eeYXL0DnDwAnCa4Pqt
      YewmBVddE12t5bcfMTv9mFfusBoM4WvqoGcPv77D6WZpfpLwhpW6xjZaG0sLIRpYZ35l894n
      CZPRgKZTcbRpvxjMRiLLW2zpdhKxMPMLi3R0dGAqmZDOxtoqgVAYJRzF5nRR79qZLzpSArh/
      iMZ+iIe2CEZTtHT3YcoGCUcTuG17e1vtHZnB8+eYmV2itbOt4lh4fWsbw7d+hNXTiEXRQDqc
      r7l94Az2YIC8rlDvrysbV80nef17VzE7nBiMRuKhABm1F2uFr7ugyQxeuEQmvM52qvzEpNvf
      zBlPHQVdwWw8vG3drb4OOlLLpLI5Tp27gMlgqCAylWA0g91mo6+zno1o6oEAjtxiuP2hMzO/
      zNlzg8yO/IiZzQydzQdd+AFURsemcCgqiXSKtY3yKy8tTj8fee45Bk/0gGRgcPBU2fhPyuL0
      OKFkjkI6yuhE+Y1xZcVMT183DoeD+sZmzpw7W7HwAzQ31XPrR28wt5Wip6OpYvxCKsyN2xOH
      dCbcDsntJTZT4PM4mJ9bxOFyVVgHZcBf76XBY2N0agX7I/23D7wAMqkkC/PzJNJ53HYj0UT6
      ENKRMckqK2sbLC6t4SizVr2a5PIFPF4fdT4PaqH8kmtJNtDdd5zBs6cxamneunqtwlJljZm7
      Y4xPzSEbjKBm2AjsPixwVzpGG3ImyI3h24yOT5Gv3DffP5KGLCnoKBTScTY2t76S46MAAAVG
      SURBVCiUWD+uFrLMzUyTTmdI5CV8vjpspoc18pGbB9gfOpl0umgc2WS2Yjrw6ldnYfou64EI
      BqMZm8PNQH9PRYeVw0ZT88zPTJPRjfT19pRtdmhqlrHbY2iKkZa2DnyeSm9NWJ2fZHE9COzU
      IGfODVacnEPXmBq7Q1Q10FLnpqWtkkPM/slnUwRC0XvunDseX3UNDRgfkx9d00in00VekWaL
      FcO93+4DLoBqoTIyMs7p0yeJbC4SyUIsoXH+TF/lWw8FjYXpSUYnpmhu7UTSsiRVKx+9fLb0
      HWqOu6Nj5PV7hURSOHH6DOYy74qi5en5OLcnNjh/tvwOH/H1WdY1H5nAEnYZGk8O4jjA91E6
      GiJZUFlZXgXAZHVxbKCnQh9AZ+TGO+iKhUwiima00d17jGa/62h1go8uMlo2ztrmNtHNIL7W
      DtKZ8p5nh21PV/8Jsuk0dV0DuIwqdyYWy9+hmDg1eH5fqWRSSdLZnZWT6dg2BkvlFad2fzPh
      GyMEAiGa2rroPuDK2OLyYNbB533Y6d/LWiBdtjI4OEgmtsFSIMfmyjLN/lOiBtgbGrFojEw6
      jcXpwWk1oekSyvvdBCpkmZmeIafJdPb0VvRT3i+RwAbBaBIAo8VGa3NTxWaTlk8zNj6JqoNi
      tOxpMdx+CG4ss7r1sC9itDo51tddcbh8dX6SjUgKXdXoP9ZPNJaho7VB1AB7Q2Ji7DanLj7/
      oA18FM5ujAS2SGZySJJEIBjGWcEhZr94/E14KvjZv5dkYA1LQxf9zQc9GbmDw+6io8PB5uaO
      s5HRWH5V7g462VweRZLAYEDVjXS07iy3EALYEzpet4s7w7ewWS0VJ8KqxfpWcF8zwYdNNLDO
      wmaYrcAy6W0fisHCwPG9OazsFaPNgaLrmO8550iSvKcmUKmZfNEE2iNqIU9gc43ltW16jp/G
      tweHlcNmeXKElbi255ngw0bXdXLJOAWjDZtJIR4OY/P69uDTsT+ysS1uTSxhMRkwWp0cH+it
      0AnWuP7WNQx2D7IEbd39+JxHcCb4aKIxMvQOqsFKPhqi77mX8JV2B64a+VwWT0sP9xsa7z1m
      9f1AVwssz06QtDbS5DazODvHmcvP72nR3X5IR4I0952hc88/hMzA8ROsbgaQkFAecYMTAqiI
      RENTE5vBCNlshkgkiq/BtadFcYdJIhJgaT3w4LOrronuA+4D7B8dg9mG2bAzPn/87Pk9zTbv
      h8D6MquhNPHlm0SddowWB8f6K21spjI1s4CGTkejm3A8g/vepgaiCbQPctk0m+trOPyteCss
      h65VtHyKm7fuEM/ptPk9dB87fqBNIF3NcevmMJps5PTZQSx76mDoTE1Oo6hpouksvpZ+upp3
      /AGEAAQHSnx9ljXNSzawjAWN1tPnsR9gLRBZmiBs66DREGU5JHGsp/L6JE0tkM7mMSsaa4E4
      7S2ND2pw0QQSHCjOpm600RHCkRjNHb0HWvgBVE1naWacoJQhEM1TyCcrdIJ1bg29jWI0sZ3Q
      aPPIzGGht3Wn9yQEIDgw8uk4t4Zvk9d2zg1empulo6MNywGKoK7rBB/r2s8dKkarl7ODfQzf
      nKOnr5H5tTjcGz4QTSDBgRMPbzG3sIqzrpGu9vIui4ePxuSd26RVnUwmh9lkoKnjod+xEIDg
      wCjkUtwdn8Ds8tPT2fZgxeVRRghAcGDkMwnG706hSzsF/zDWAh00QgCCmuYIa1MgOHyEAAQ1
      jRCAoKYRAhDUNEIAgppGCEBQ0wgBCGoaIQBBTSMEIKhphAAENY0QgKCmEQIQ1DRCAIKa5v8D
      uxiQjCdi5csAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Deaths and recovered by countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXQc2X3f+6mt9w1odGPfQRALdw454iwajTTSWJZGlmxJlrXbluPj9eUk
      OS85jo8dOzl28nxe7LznRE/j6Emy/KRYViRbo2WiZTQajWbjcAMJEARA7Du6G93ofamq90cT
      IDFEL1gIYMD6nIMz7OpbdW/11Lfu/d17f7+foOu6joHBfYq41w0wMNhL9kwAyWRyr6o2MFhj
      zwSQSqX2qmqDfUYmEeHihYsEIvGyymvZFNNzCztSt7wjVzEw2CJ6Jspf/Kf/k97TD6Ca3dgF
      N+ev3ODEA2eJB6Zw17QxPzlEja+SG+OLiCYrldlZ/q+v/ZhPfOLjOGQN1DTxjM6hzi5CMzdx
      13dgV4Sy6jdsAIM9JTDRT8PJJ3j/+97HmZ5Gnv7s50jEl/nrz32Riy9+n2ASfvjsMwSmBvnm
      d5/jn/7uS0QRESUJWZL4xpc/y4uXRggMX+Dl69M8850fYC7z4QdDAAZ7jM3hZmF2ClXTSCei
      ZC2VvP3t70RSo+jo5HIZMtkcAEfPPEZLjZNKfwN1jS10tzVg97XxiQ8/xcNvfweXf/BVTFXt
      mxrWGAIw2FPsNYd5oB7+w7//D7x4fZGHu/382Z/9OSfOvYuWpma+9Nn/QlyzYrI6qXRZ8VbX
      YHFVYVmZ4B/+10tU11QjACZXLbZ0mNOPnNtU/cLqOkAqlSKdTt+Le9yQeDyO3W7ftfoMDjbB
      uTG+8+MLfPRXPohc/gjotgA0TWM318QikQhut3vX6jMw2Ii14ZIo7u5oSBAEJEna1ToNDN6I
      YQMY3NcYAjC4rzEEYHBfs6crwXouBXca3oKIIJvXPuZUDUkUEIRNmPUGBptgTwUQ//zPoScC
      a5+l+tPYPvwlAFRN448+/2N+7T0n6aiv3KsmGhxwtj0EWgnOcfHSZV5++RUS2RzXLr3Oa6++
      zEI4wbWLLzEymd+0NHL1ZS4OTJV93Xgyy+RihG+/NLSr07MG9xfbFoCzsoaTx4/iknOEQgFy
      pkrOPHCCiZFhVMlCbHkR9BzRRJpsOlP2dSPxFG67hcHJAMGIsXXa4N6w7SGQIKjcuHaNcEai
      SsgiSyYEyQxaGgQzbgVmZ2dx+esIhPMLbqt/Ouvf7Lquk81mAZhaCNNW58HvsfO9V4f4yNt7
      t9tUA4O72LYAQktBalsPYZsaJJyxEI2ME5hJYfXUo6UC1NZV8+OX+3js0eMEwiuIorj2JyCs
      k4AgCCiKQvr855m8FKE2m+at+hx/cvMhPvT4ESwmY/e2wc6y7SfK6XIyMTmNpbKFw9Ve4k6R
      hXCS3kN1xOMuLHY7Z8+cwmZ10tXhKOua2twVpufsnDIP4c7c4LBq5/nLD/BzZzu221wDg3Vs
      2wZQzDY6DnXSUO0FwO720tbcgCgIOB1OEES83koQFdxOa1nX1BBYUCuolpYBeNJ6nmdfHSGn
      atttroHBOvblQlhWl0noFjxiDIBmJYDLZubyyPwet8zgoLEvBZDQLWgIOIQEAIIA7zl3iO+8
      PGxMiRrsKPtSAHOqlxophHjHAvDJQ7WEYylG58J71zCDA8e+FMBszkudFFx3zKRIPHG6jWdf
      MXoBg51jfwpAraJWDt51/NFjTfRPLBFaMRbGDHaGfSmAuZSFWuluAbjsZs521fPDC2NGL2Cw
      I+w7Aeg6LATCVIkbj/WfPNvOjy+Nkc0ZU6IG22ffCSCVyZJcWV6bAn0jtV4nTdVuY0rUYEfY
      dwKYCUSpkQLrZoDeSH2V07ADDHaE/SeApZUNx/934rSZiSZ3L4SLwcFl3wlgemnlrinQN+K0
      mogmyt9abWBQiH0ogCh1luJRgh02syEAgx1hHwpghQZf8V2jTquJWNIQgMH22b4AdJ1wKEAo
      EgV0VpaDzM/PE0ukSUQjpLIqAOlEjHiJcXsqkyOWzFDlthUt5zAEYLBDbFsA4cAcwZUEs8NX
      mA4nGRgYWvtuYOAyQ8NjAAz2vcTlEj7BS+E4VS5bySgQDpshAIOdYdsOMR5fHS5PilcnR2mU
      IadlmZ2ZodnuRrG6IRtHzcbQTS5kQViLQbqRS+RCTMDfbNtwlTeXy63926KIxBLpdccMDLbC
      tgWQSSzzyusDnDz7MA6zzMOPPApahlcvXMNqkan2WOgfHKemvp6J2QyCkI/zs5FL5KzqpdHv
      Rojf3QPcGUfUbpVQNR0NAUXad2aMwZuIbQtgYngI0Wzm5uAATa3NTI6MoupZfLVtpGNLVNXU
      0Td0gZ7OeuaWIkWHN7Oql7M+F8IGk0BvPM9uMZFIZfE4LNu9BYP7mG0L4NDxBzl0x+fK06fu
      +OQD4J3vfBsAJ49UFLyOrsNsrooGnwvGS9drtyrEkxlDAAbbYt+MH7LIxKRKqjzFZ4BWsVsU
      4qnsPW6VwUFn3wggotmxuryYlfJyBtgtJuIpYybIYHvsGwEEVRcVDhNymUat02ZshzDYPvtG
      ALNqFbVSsOxI0MZ2CIOdYN8IYE71UicFShe8Rb4HMHaEGmyPfSEAXc/3AHUb+AEXwtgPZLAT
      7AsB5JAIaw6qxEjZ5zhtZqMHMNg2+0IASd2Eqos4xPK9vAwj2GAnKCiASCTCwMDArjRiWXNi
      E1KYhPLn9Z1WM1FjCGSwTQoKIBQKcf78eebm5u55I+Zy+fH/ZjKBOW4ZwUZ4FIPtUHII9PTT
      TzM2NnZPGzGrekv6Ab8Ri0lG1XQjYrTBtigoALvdTnNzM93d3Zw/f/6eNWBtBmgTU6AAoiBg
      kiVSGWNLtMHWKbgZzu/34/f773kDdAQCqhu/tAy4yz5PFAXMSl4ATpu59AkGBhtQUADLgXmC
      4dvBqWSLg5aGmh1vgIpIVLNRUSAQViFEQcCkGD2AwfYobAQvzvHT732NrzzzPDeuX+W//+3X
      Ni6o6yzNz7AQyGdzScYizMwtoul5/+BEOv+AJqJhIrG7pzlFNH7Z8RxWcXNz+oKQtwMSxo5Q
      g21QUADtPSd55+MPIyBQV+Mr6H4YDsyR1GQiU9cZXwxz6eogpAL0j8wxPDLAyEjegB7uP8+1
      GzN3nS8JOmfNg5uaAYK8g4zhHG+wXYo6xNT3PsqHVSuj8xH++e/+sw3LeHx1ONJxXhnOcrgh
      hquinvqWOmbOX8BscSLkEuQyUTC7kBHKSpOqbTC1uZo+9U7sFoVwLLnhdwYG5VBUAOHpQb76
      zf9FQ2cnfV/8Ev/6X/zOXWXS0SCvXh7igYceQUoFmdPi6HoWBAUQqKmwcm1gjNr6esZn0mWl
      Sc0JAm+c3FQU5a663Q4LiVRuw+8MDMqh6DpAcH4CX+cZvBaNRIEs79MTo0hmE0P910hLLvTk
      Eudfu0hjxyHMZjOVNXWEllfwuh1YzTv7oDqtJmM12GBbFO0Bmo8+QlfweeaD8MlPfXLDMu1H
      ztB+x+fjp8+u/bu2oguAtz/+CADHejzbbO56HDYzs8HNzR4ZGNxJUQEsjvYxnXLzyY8+RZl+
      KruK4RNgsF2KCkA0Obj2whf5y8krVNZ18OkPvnu32rUhupoD7bbB6zRhDIEMtkVRAdS09vCR
      D/0COasXs7j3hmbm4hfJvPhXa5/FXAUx2x+i63rZrpQGBndS1Ageu/QcLwyGCSzO8u1nv71b
      bSobs5Alm0mjasaOUIOtUVQAbl8dkZkbvPbiT3BVtexSk8pHEXKQTZDNqXvdFIM3KUWHQLLN
      y0c/+it4PU7c7vI3qu0WsqBCNkkmp+74FKvB/UFRAUiyyPULP2V6KYynoZuPve/tu9WuspBR
      b/UAhk+AwdYo7hCj6yDICAiY5H3hPrwOSdBQhByptLEj1GBrFO0BNB1sDhftnmrOPPjgbrWp
      bATy2WKMjJEGW6Xoaz0yN8ylsWUavGb++ukv7VabNoXTiBBnsA2KCkASBTLpFKl0Cja9YXl3
      MFaDDbZD8YWww+f4kGpjNpjgtz/z8d1q06YwcgYbbIeiPcDI+We5tCDx2MOnefrpp3erTZvC
      aTMbTjEGW6ZoD1BV18LAF57hf8y+jtPXsktN2hwOm4npuDEEMtgaRQVQ2dTLxz+QYD4Ob6lr
      3LCMrmYZud6Ho6GXWo+Z630XSWsSNY1tJIITWCqaqPO5mR0bICZW0dm8s5EmnFYz0YDRAxhs
      jaJDoPHLP+ZbLw2zGFjkK3//lQ3LpFNJPE4L4UQOPZdifGoek9VJVYWTlUSGpblJdC3L4uIS
      oVAUXdeLRnMr9F2h4267mZV4eu26xp/xt5m/4kOg+jYygZe4MB6h+8Gf27CMxe5CSFgIZEGQ
      rbz7Pe8hubLI65euYVVkKiwCk1NTeGobWAiyVnEhn2BVVTf0CVZVFU27e8XXrIik0lkymSyS
      kTLVYJMUFICuawRX0nzkU5+hqaaCl89f2rBcJhVnKbhMOCcRdeWYnw1hMalYLDZQY1TX1vCj
      Fy/x9sdOshCMIIr5h7SQT7Asy2Q38AmWZRlVvPsBt1lM5FQdQZSQ5fLyixkYrFJQAKGJK3zp
      6z/Dll1EtHs48pZ3bVhO1zREVx3NgCTbqa3Riac1jjVXkkmnMZtNPPrIOSwWC0e7XDt+A2aT
      TFbVjC3RBluioABWAvM4a1toTCdYcPTS1ezbsJzZ5qTO5rx9wFKBY/WflnwOX6czf8Rm3ZlG
      34lFkcmpGuoGwyMDg1IUHDRXtRyloxIstd00O3OMjN8d1Go/IIoCFpNkRIgz2BIFewBnVQNP
      vbdhN9uyZVbTJfkr7HvdFIM3GQUFMDZ4haGJ+bXPVk8Nb33w+K40arM4jPhABlukoADclT5a
      BMvaZ8XqLFR0zzF2hBpslYICqPTXIWQH+evPfoGkaEH2NPOn/+LXdrNtZeO0mYgZO0INtkDR
      hbC50QG6HnwrrspmXn/p+7vVpk1jhEg02CpFl07bT7yVo73HYOEyJ848ultt2jRGzmCDrVJU
      ABPXLzAb1XnX+z7E9OjupEzdCkbOYIOtUnAIFJzo52++/A+sSD5eq3ZSc/jMbrZrUxiJMnaO
      SCyFIkvYLPdHmJmCPYC3uZc/+nd/wnseO01dUxtPvHX/OcWvYrMoxkLYDvHVH13jB6+P7nUz
      do2iQ6Cl8WtMxO285/EzfO5v/t/datOmsVlMxA0BbBtd1xmZCTE+H0bfYEfuQaToLJDTU8Xy
      9M945XwUd8XGe4H2A3ajB9gR4sksS+HEXjdjVykogEwyhqm6h9/6lI+lcIp3/Hx7oaJ7jtUs
      k8rk0DQdUdyf0SveDAQiCTxOC6FoElXTkaWD/1sWHALNDrzIt166jq+2iZ7uTizK/t1rL4li
      PmVq2ugFtsP4fJiupipcNjNL4fheN2dXKOIQo/PcP32FmYv5BTBXQxe//fH331UuGQ1x7dJ5
      XIceprPazOuvvoaORnX7cQI3L2Cp6qD3UCP9558jIrfw0Mm2e3Ijq/GBHFbTPbn+/cDo3DJt
      tR6SqSyTCxFqvft3+8tOUVAAJquTX/zYr/PUQ91FL2BxVHCsu4PRLKRiQcyeBo521XH+/FXM
      dg/ZxDK65iejy0joRY0r/db3G5XQdZ2Nvlg9x3FLADWVjrsLGZRE13VGZ5d55GgT0USG8fkw
      Z7vr97pZ95yCAqjvfYRybn99ZhYdURAREAENUPDaJMbGp6msbWA+kH+CC+UJRs/7/lLAJ3gj
      8WiaBqqKw2IiEkvlzzfYNKlMjpV4miqXhUa/kxcuT94Xv2XRWaBySMVXmJ5dYDGXpeFwPbHl
      a9wYWMJd3UwqMkt1bQ0/eOEiT7ztJPOBCIIgIElSSZ/guxoqy6gbGLiSKCHJMi67mURaRZa3
      fUv3JbGVFJIo4HHaaK7WmQ703xe/5bbvUJIVKhu7qARMZiunT50gns7hdjrIZt2YFIW3P/4o
      ZovCid57l2TDYTOiRG+H8bkwTTUeRFHAX2FnJZ4mlclhMR1sEWz77hSzlUrznc6+Mh5z/l8m
      U94gtVrzfgVm072bSXJaDZ+A7ZA3gCsA1kQwF4zSeuvYQeXABNIxokRvnVUDuK3udiLzRr+L
      6aWVPWzV7nCgBBAzeoAtoek6C6E4dXdMezZVu5lciOxhq3aHgyMAq9lwitki0USGrKpS4bo9
      lDUE8CbDGAJtnbG5ZZprPIh3zL41+d1MLa5sGKbyIHGABFDYCE6kslwbW7xvdjhulrHZMO1v
      MHYdNhOiKLASO9gvlQMjALtFIZHOor0hRKKm63z5+1f4y6+9Qjp78Bd2tsLo3DKtdxjAAIok
      UuGwsBQ52HuCDowARFHArEgkM7c3xOk6XByaY2gqhMdhYWxueQ9buD/RdZ3x+TAtNesFIAgC
      DX4XU4sHeybowAgAwGZe7xewkkjxhe9e5jeeOsWjx5o4Pzi70S6L+5pYMkM6o1Lltt31XVO1
      m4kDbggfLAFYFBK3kmbrus7nv32JR481cbjRy4lDNVwemWfDHXX3MVOLKzT4XW/Y05Wnqdpz
      4GeCDpQArGaFRCpvCP+0b5LFcJwPvq0HQRBo8rtJZ1QWlu/NmFbXdVRNW0sA8mZhbG6Z1lrP
      ht/VVjoIRhJkcgfXdjowGz0EQbgVHSLL4nKcr/zwKv/2E48iS6sJOQQeOFzL+cFZnnqoc0fr
      zqkaz7x0g59cnsBuUVBkCYtJxmpWsJpl6rxO3v2WDqQNEnzsNaOzYU4eqtnwO4fVhCBALJGh
      0nUPYtvvAw6MACC/FhCOJvn++Zu896FOGnzrE3I80FXH15+/XpYAook0ZkXGVMITLrSS5HPf
      uoCma/zOB86gyBKZrEoykyOVzhJPZfnuK8PYLAqPn2xlg5HGnqHrOmNzy/ziY10bfq/IIhVO
      KwvLMUMAbwacVhPfeWUYr8vGk2fa7xrXdjVVMRNYYSWexmU3F7xOTtX44y88j4DALzxymLf0
      NNwlBF3XuTa2yNPPXORtJ1p438OdKAVSNB1qqOQ//n8v0tPi21cOO/FUlmQmh8+9cVh5QRDW
      DOHuAglS3uzssAB0ZsZHCK4kqW5oRcpEMLn8uGwmVkILpAQ7/oqdfwDU2Usk/+n3MEWPEog8
      wO9p/wMGfwu9+32kn/vTdWUPiV6uji7y8NGN075CfurUaTXz4cd7+NbPbvC1H/fz3nOdPH6y
      BbNJRtU0vvnCID++NMZvv/8MPS2+DY3IVRp8Lt57rpPPfesCf/jJR/fNUGghFKPSaUWWC7en
      qdrN6OzBnT7eUQHoWpb5UJITx3sRRZHLF68hBeIcO9LJ2PBVEkrrPRGArubQU2GOCv3Uuabx
      aXPoahp0ley1b6wre1I4w/nBBznR9y/RlgbXjoueZuyffgZd1/nmC4P88jt66W3109PiY2px
      hW+8cJ1v/nSQt51sYWgqiEmW+PPffAKXrXBPsoogCLzrbDsXh+f47svDPPXw4R3/DbbC+HyE
      5hr3ui0Qb6TJ7+YnlyfQdb2oyN+s7GwPoOlouQSXL12kprkTUbEiqikyqQiCxYOo3XaHLJQm
      NZvNbrj/JJvNbpgmVVVV9Fuue7VyiFpC+aaoGrlc7q7yR5vcfGMyQKoijUm/fT1dU8lmswxM
      BMiqKj3NXrLZ/JpCbaWN33n/aRaW4zz76ggn2n383IMdiIKwVqYcfv3nT/DHX/gJva0+Gn17
      73A+MhOkpdpd9B4qHHm7KpnKoBTpKd6s7KwAJIXTDzyIKGR59bWrWKwytVV2rlwbpaWlltGp
      FKIorv1t5BKpKAq5DdKkKoqCtsHQQZIkdOnusbcoiRu69LkdFvweO6NBla47vxbybpfPvDTM
      Bx7twqTcHRuzwe/hM089UOaPcTc1XoVPPHmcp5+5yJ/86tsw75C3VU7NT78WskE2Qtd1JuYj
      PPFAO8oG97qK1y2jajqprIbNWrq3e7OxowJQcyn6rw6S01Qa2jpJrixR4a8jMxGi0uUgsA/s
      P0EQONVZy5XnW+lyjK/7bmwuzMLEDY7Xv0Tq+dvdvfnh30cLjpAd/O668srRDyK66lAXrq07
      LjrrEN0bhxR46Egjrw/O8j9fuM6vvOPIumGFpuVnZV4emCaZymExy1hN8u3/mvIZMYMryfxf
      JEEgkmAlnkaRJT7yjiM8fKSxrOBgyXSOWDKD33P3CvC6exEF6n1555iDOBO0owKQFRvHT526
      fcCX9wF++KGzAHQfunc+wZvhVGct//lHHfyS/hNk4XZf88xLQ7zDdhntyk/I3vEMmR/8TbTg
      KNlLX153Hbn5HLogkvyHX1133PTgb2J+6Pc2rFsUBH7150/wb//mOU4eqqGrqYrx+TA/uzrF
      KwPTWEwyZ7vrqa1zkMqopDJZIrEU8+kcqUwOSRTxuq201Xo421WH123DbTczH4rzpWcv84PX
      b/Jr7z5JS4HFrVWWo0lMioTdUjqO0upM0LH26pJl32wcqGnQcqn1OhDczSzmPNTJeZthPpJj
      OBLkE12VCEM7U0/0v52DdHTts9R0Dtsv/Q0um5lff89J/vIfXsGsyCiyyMNHGvmDjz9KrTff
      TW7W4HTazPz7X3+cn/ZN8n989WecOFTDhx/vxW03b3it8fkwTdXusnqL5mo3V0cXNtWeNwv3
      pQAUWaLHOsfVYDt1cghdhx/Eenjboy3Y1Ne51wEW9USQYz6V33isBr/HTqPfXXDItBkEQeCt
      x5s53VnLP744yB88/SPeeaaNw41VVDgtWM0KZkXCrMiMzoXXnOBL0eBz8b1XR7bdvv3IfSkA
      gBPmEb6V6eCd1vNEdTt94gP82elWeO3e1536/h+ijr/I6vprXLHh/N3XyPT9Pdkrf7+urPWp
      v0L0NG3q+nariY+98xiPnWjhuy8Pc3V04FbQsPy8myDkV7D/zcceKet6NZUOFkIxNF0vOmX6
      ZuS+FUCbPMei1kZct/J88gQnPUt4HFb20v9JjwfRAuvHX7qaITf9Oqln/8264+ZH/yXK4XcX
      vV6Dz8U/e99pIO8YlM2qpLMqqUyOeDJDY3V5NpnVLGO3KATCiQOXjPy+FYBFyNAqz3E508FP
      Usf5A8vP9tU+nXXk0ujR+XWH9GxyU5cQBQGzScZsykfRYxMPsiAINFa7mVyMGAI4SJwyDfHF
      2Ls5bbqBT3rzLffrapbswLfWHRMrW5HrT6GnVtD129uYBUFCsLjeeImyaa72MDEf4YHDdVu+
      xn7kvhZAj2kcgHfbXgXehHPcuRTpH/7xukPKkV9Crj9F4u8/hhYaWzsueg9h/+Q3t1zV4UYv
      f/v9Kzx5tv1AhaC/rwXgFhP8qefz+KUwsDlD882KFplGT67v7UR/L3oqjL4ys/54RSuIElpw
      hCMOOO5Z4S+/9hL/6gPHsLoqd7PZ94z7WgAA1XJ4r5uwq6Rf+X/IDfzjumOO332N3MgPSf9o
      /c5Z6y/9dwRrBYmv/goA79NFvhx7kv/2LZXf/8jbNrX1Yr9y3wvAoHxkQePjju/zuUkvX/ie
      h8+8++gbJg5EBElGV7Os+l7ruoCKQGglxfTSCtNLUSYXwnjdNo60+umor8RilhHY/OLfjtzT
      rtdo8KZGEVR++1EX/3k4yt/+x3/OL9peWBOB1PoY1l/4r0S+8TsMjM7xUuoIc6qXsO7CXtVI
      rT5NTewyHVKIoOrk6y82MmvuoarSTWejly6fSIcyi1uMozSeQXBUk72+3siXWx9DsHvRk2E0
      RHK6hEnIIphsCErxfU0bYQjAYNNYTBL/6iPn+Hd/0YczleCdltcBmI+LvPbcNV4aOoczM8cj
      lqu8V34Zr12i6rd+ROZnf0Xm/E/WXUv++DNMT4xx7ft/xQvZRv4uV41TTHDimJXTx7JU/vDP
      MQv5tXlNh/ST/5WJpIvL3/sCg9kmopqNenmJtvYO2k++laZqN5VOK1azXFaPYgjAYEs4bWb+
      N/c3+Ivg+wmqLqZVH6FkE+f8Or9X/zL+0EusbjMSxIqCayxmRaK1AmqsF3jCeoG0LjOT8zGQ
      buKLz40SXv41WuVZKsQYN3N1xJ8NUudeoUOK8inzs1iFNEHNzQy1nL8+w9f/5z+SNvuwW2Sa
      5AVafTY6zj1FxZX/gi14GQFI6wo39A4uVnzQEIDB1qmQovy+6xt8O3mOJywXOHY4iPuJT5L8
      eg51i8sqZiFHmzJHz0knH246zcxn/4jBbBNLqocP2Z/n8Acex+KsIPF359fOqWGZk5065gff
      QuT//j2SGZ1g1sVEspqp7HFe+cFVFmfakbM+fFKY6ZyPBkuUR45V7bxPcCQwz0wwTuehdkJz
      kyjuaiocFsJLMyQFJ7VVW1+MMdh/1MghPuP8DgCSUL+jhqwgQIUU45w0sHbMLBePuSSiYxdT
      2MUUTfIiUmsF1l/418S+/hssTVxnXq2kRZ7HaTPjfOB/32GHmHScgZtzHO3w0Xd9AiE9j7ic
      pOLIYcZHr5NUWg0BGOw6giAgCRo+KYJPyke6E8h7t+2oANKpCE63H4e3ntzN85gtVmQtTSoR
      RrJWIqq3fYIBOPLLkImzOmWmuepJp9PoLY8juO5YmBIkMpkMWlUvwslPA6uZVHWyigtEC5z4
      1HrvqopOsqq2Vn7teFVXvo7O90L9g2s/kGDx5OuofxBBWj+bkNVFVHcznPjUHUcFcrYaBMl+
      dx3+42QyGYRjH0XPpm4f9zSRyWSg9QmEio7bJ0imfN3+Y3fcX/43yUp2dKsfTnx63Tha87SR
      1YR1des6qNW9+fs7/H5IhgAhf56tikwmg974EIJ5vbNMVtVRPe133Z9q9YNiufv+fEfy93Hs
      E6DdEYy4ojVfR8e7EHw9t0+Qrfn7qzmBcPLTa//vADKCBd1Wd1cdqqsZXZfXHc9ms7faZCvY
      JuH4x29Nw76hTe1PIlTd3SZB38E4fpl4kIGxZY531fL6lTFMikpjlZPh6RDt7XXcnEzy4Ml2
      AJaXl6moONgJ2Az2Pzvq5q/YKrAR4/WL/XR0deJyufD4awGRSpeDCtfm52kNDO4lO9oDbAaj
      BzDYDxy8QC8GBpvAEIDBfY0hAIP7mrVp0GQySSqVKlZ2R4nHN05UoWka4gYR4NCh9gYAABSX
      SURBVAodXzVhNlqA2ey1Nnt8tf57WXexmJz36/3tZJvWBGC1WrFad9craiMjeCs3IQjCPRfA
      RnWsZoO5lw/hbt1foQdtr+6vUN073aZ9txfozobqmko4FCC4kqajbWOPrbXyuk4ktMT49AJ1
      DXV4PJUo0sZvtdVzluYmSWOhxl+FLIkF34K369BYmJshFIkjCCJtnZ2YCgSWyp+jMzs5hmj1
      4PNWIIlCyTrS8TBTC2Hq6+uwmk0Fy995TiwSZHpuEXTwN7RQ6dz4RbZaXlOzTE2Mk8yoyBYH
      7c0NG5a/88GMhYPcHJuivrkRh7MCi1L8PqLLQWS7B4siEggE8fmqipbXdY3l8AqKnmZiIUpP
      V/uG935nm8LBBeYWQwgI1Le04SzgqnnnfYfDETQdZJMFj8uxP22AdDzCtb4rXLp8iQt9wzQ0
      lHbE1lG5MTyOVcgRjyyzWEZ+W6+/FklLcfn1l/npS+cJRmLF2xULMRuKEosmyMajlM6cJVBd
      W08uEeH8yz/l5fOXicSLDzPNNjdVbhtjQ/386LnnGZ9eKJFzTOPG0CjxlSiVLoXAcqJkq5bG
      B4lmNHKCmZXlQBlpA1UGBm/ilDXiyQRzi6W96BZmJsnq+Qd1emqqdA2ZODNzSwyPTuIkRSB5
      d2Tv9eQYHpkkFo1iVzSiidLhzCaG+glEEqRSKTLZ/PX3pQBS8RVWkhmsdhtutwdLWVGURSQy
      TE7PMDEfxFlG3P5IYIHpmXksbj/Hj3YxPzlOtsjTIMkmXC4PipAmGk+ilXxydJbmp5ldWMJT
      3ciRrnYmx0aLnpFNxRgbnyCZEzl24iRScplA0WztAk63C1+FnenFZdBKy9Jqd1BR6SMWWiBd
      7IbXEDFJOSamZxibmMXpKh0apaGlhaG+C1y88DpV9S0ly0uKFdLLOKrqES1WXKZS7pYSrgo3
      bpvCQiiKrt8dOv+NyJJIJqchSdJakpJ9uxCm6zrpVJyxm6PoZhc9h1qKXk/XdcLhZaxWG+lU
      EpvTXXAItEomnWR+ZhqTy4vdYsFht7K2d2bjStB0HU1VyWk6ZpOpSCwhnUwmQyqVQjGZEQUB
      SZKRJLHojkk1m+LG4A0yqo5kstLV1YksFHIX1O/Ie6yTyeQwmZSSOzJz6ThJVcGqCESiMSor
      Cu/XX0VTVVLpNJKsYFKKO5ushAKkshlm5xYBcFT46GguHvpR13UmRwaZDcaor6+ltq4eRdq4
      jlU7IP/o5gN+mc2mkvedSkSJRBMgCJjMVirczv1nAwDkUlEiKRG3BVLpDD5/ORHMckyMz3Di
      5FFiC1PMqwqN3uLx2CdHBjF5q1mcmQdB59ix3qLlM4kwr17ox+1xARKHe3sxF3xR6cxOjpPM
      3n4zVfrrqPYWv5fYwiRyVQs9teVFbQsFg8TCAcLxfC9R19SOr0QWnqWJYYS6YzgVgZmJcTwV
      FRR/36q88uJPcFRUAQLN7Z24C+ZY03FWeHHoOlW+fPbJcrZIq5kY4bSI12FCi68QTPmpsW88
      plczCW4MDXNzbIqWlmYigXkaj5yjxV886UgiEmJ8ag5NsGE3S1Qc692fAliaHEWoP8rIjQs0
      dx1n4kY/Df5S2yZkzFKaCxcvktMEjteX3nekmBRikQihpQU8tYVzhq0iSiJWp4eWliZAoIAd
      uFqalo5O5qfGGBmbQjaZkB1eqr3F67C6PUxfHICoF0mx0NzShFzw+RHwVlUhiiJ1DSYGBkex
      2UvP5FU1tHCh7zwzioTV7ad0gGgBxWqnpaUl30ZL4YQaALMTNwmu3LZF7O4q2puL23GSYkPM
      RBibX8JRVc+ZInXIZju9R48Sj6c43NVNaEYhXcbQLxwO09x5mPnRKTK3suLsSwG4qqq4dv0y
      mm7isE1irMxBmiwrSJqOJIpkcyqWEil96po7iUcjeCt8WK2WktcXZCtel4VgMIggSFgdzpIP
      z3wwQkOVG09LB9NjC4C/+D3YvZw7e+tNJggl3swAGhMTU1hljcbWekaHpzna21ywdCoaIY2A
      35/P+qhYzPmdySXuo8bvIxgMAgJ+k7XI8FKgvqWDWjXL5MQEWU2kvm7jPMTrzhJE6hubcFb6
      AeHW8KZYoySO9HQyMnQDi8NDSxlxTps7uhgeukEml+FQzxFgnwpAMtlxWBQkxczYxAw9R46U
      cVaOeEbkxImjZdcTXpplMaGjrSxgq27D5Sw8dNByaUKhCIl4jKwGgiBTW1KYAnW1tTisMteu
      9lPdfKhkm7T0Cn1XbxBdSSKZzDz6yENFeoB8HR67TDgjY9FyVFRvPN24imKxIWgqXm++KxLl
      4m9z0AgEQqQSceIZFRCp8NeWvI/J4QHEiiZqLBp9fdc4e/pY0fK5TJybE/Mc6mgBQCrZLemM
      jd5kbimMWV7EWVmF31XoJaYzPTbMjaER7N5aLIrI1b5+3vrQ6X0qANmEz5/PRqJmU/Rdu86D
      JX5AEImGFujry7852jq7cVgK3Z7O0vwsiZxAZOwqevUhqkuE+xNlMxUeFxa7C6fdQiwcpnS2
      U51UKo2/uoazZ11MTgVLnUAssEh1Wxfm6RnsUo6MXuotJeB0upgdHiPstWOyFy8tKQrhqZvM
      ZSvobasu9eIHRKqqqnBYTcwv5R1siifL0wkuzhNYjmAmiG6R0TdIbnhXLZJMIhYmEokAAlan
      C7lo61RyWKiqqqKtoYpgNA4FBSDQ0NpJJpnA1dSN1yZz8VIfsE97AMViw2/Jj+F1TWV2PlDy
      HAGRY8ePsRAMIyCWzHxid7gIhac4fOZRZFFANhWfNtV1jcDcBLMrAi31VUxcH6D9wUdQivyC
      izMTXLp0mdDyMloujd1bOvyiu6YJPQWaFeK6A2vJMZDGxOwSnY0+UmYLCxMz+I+2FT3D4vIy
      98pFsis1WB1uDre3lJgFUrl85Ro64HPbWEn4sJsL9xw2u5OW9sMk0xkAWtsKD8ny6CDInDhx
      /NbUsoBU0nCWaWpuQMjEGZoK0N1buldq6ezm+sB1pjVobO+8dZV9SGx5gesjk7c+6dS1lM6r
      q5NjcGgUQRTx2E0kMzlsBeeSBWwOJy6LwPD4DN1tG6+Erq9AI5XOgQ6xWIzGnmO4Svx6/vpm
      HjE78FYVH5bciaapTIwMgyAgmxRUDYqbMiJel4X+kXE06zJHjxfPYjkyMoxbEXnw7U/iKjX6
      WUPA6fYg5JJkNDAVTQ0rYLU7yKYTBJcT6LrK6OQ8/ofPFDlHIxRaJrAwR0bL39Mhhwu56EtM
      ZyU4z3IsjSwKZHMqmIv/D0nFoyTTaRRbJdHgIn5P6/4UgKOimjNnNpuQTcJdUYGaihJNpPGU
      0e06PD58aoTl5WVsTg/2IoawIMo0tR8i3t9PKBQitBzB6TpaZBoUpkdvMD57u/eqa+mkraG4
      EZwML+Cs66C9utw8wjqiJOH25d+AWi4DFB7OOc0ir7xyHpN/DruU7w1OHe0uaczX1dXhdtoI
      RxNUeEobnCaLjcpKIb/FIVIql4FEla8KiRyLoSger7/gVovbqIRWMpw8daJkW1aZmZqi89gx
      xgfHiK7kdwrsSwFsDR2v14e3sp1UOlvWxr5kPEooFELXclhSOn5v8cyK2XgEwe7jRHsZPQbQ
      0NZFQ/HRyF0oFjtDr7zCnN2KYnZw6vSJEtOtOsGVFMePHy9rvr26sZ0nq2oRzTZEPcvs3FIZ
      rRIYud5H96mHqKwo/huttUpbTVSuc/RY6YkJNZNgeGKBIz2djF7vx+I8ibvoG10ksRLg6tWr
      gEBT+yHcJVb/G1tauHrlCtGVBO29x4EDJQCRmzf6MJ08d2t8Wnpuz1fXgq+uBbQsff2lk8DJ
      FhtLk9foi4covRC2NbRchrbuk7TXeciPhUudIUA6yqUrfciiQG1TGz5P4dksXcsxOzNJMBJl
      bj7IQ488WoYhrOPxuOnvu4TVYimxEJYnl4oxNT2LSRZJaSYc9cWHgYIgkk5EWVxcJJWIMz4+
      TmtDAy57YcP25OlTa5vh5NIzEiTjcUTZROvhZup8eSEfIAFoeL1exoYHURQTLR2HsJcYE4YW
      pplZXEbXVUz2EitU5BdrjvUeZiYYp8ZfScntKltAUGxElya5EV1AUqx0dLSVnAY9evosgUAA
      yWzHW+ThB4guTjE0FaCnuwNBtFDpLiflkY5odnGmu5mpkUEyudKLTouLS3QfP4VTEbh8+QqU
      EoBs5vChVoLhKLUdPThsZsxF94Bp9F0dBOGWYZ7MYi+xQOfyVtMmmxm6fo2puQBvPXv0oAgg
      y82RaVrbWphZTNDcWNp+mB4bwdfUwbGa0ivAq2QSy4zOhVH0NCuzCWS3F88O/4KCniMjWDnd
      213GmxlAZ6DvMp6aRjLzY0TizbQ3FF41d9W08s7qZgLzs+hqkmuDN+k53F7CBpDwe6w8/9zz
      tBzupcpdepXd6bAx0HcZq0liJRql//owhw8fKmjQa7kUN8enae9oY/LmKF2nzmBWir1hBFwe
      N0I2SSqnoRQ1zPMsTo1wdXSBrsNd+P15QR4QAegkEik0NUciWZ5X20pgnrH5IKZb/0Mq/A10
      thbfsCUpFnKJCIFwGIfLS8M96gGExBAXL2WwWGxFH5o8OjkNvN4qksRZujX1WLQOQcRX24Cv
      tqHEVmvIpuMMDd1E1cFisRALLbJS4Sk5BKqsaSAQuYHJWYXPX0ttTXHjf7VduqZjETWm5uZp
      rvZhK5DJPpVM09XdDVqOQHCZCm/piIM1zZ0IipXR8WGmF4I8dPrIQRGAhCKk6L8xjqZpXL4c
      ob2rG2eRLlGxODjR2Yvl1sNVzPFkFUGScTksqLobs0VhYnyajtaGMt/U5WGyOqh0u4jpCh6n
      jRIbWgGR3t5uRoauY3JU0tlS+kHT1AzDN4ZI5zRMNjeH2wvP0ytmK4KaIZbIgAAqCo4ytppP
      jNygurWdmZtTJCK5kgIQJTOtzXlBehtbEQShiJ+Cyo2hEY4dO4ogKVhIMb2wTGtd8bRN4cAC
      WdHK6bPnMJnyz8aBEUD3sZObOqOxvROTSSljI9htVmeBHuypZex6PyYpyc2pIB2Npe2HclmZ
      HUGsakVZHCe5HCBRW4+9QE+jqRkG+/sZHpuiubmJ2PR1krqZo22+onUs3LyOrfYwHa7SW6dB
      oPv46bVPodlRJueXaS2RZb6yysv1q30EF5dp7Sk1C5QjsBQiGFgkowJIdPb2Yis4/SWiZuJE
      kylsisTc/CLuxuI2RmRpirTixaUHeP3iRSp9dXS3Nx4UAWwei23zUeoUi53I4iiLNplAOMah
      Wi+50g5Ym8Lhq2fgQh/BYIiaxjbaigyzRMlEz7HjpNJZOrt70RILjC0WT/W9vDTPcjJNYHCA
      tM+FYrHTVF98FTW2EiGraoDOYmAZT2PxzW26riHIVo4cO4XTZmJmZqFEeQmvrwrvHW6TxYUp
      cPz4Ma4P3kDVdLw1rdRUFP//GQmGcLbUMzw0x9mzZxno6wMa969DzH5EzWWIxZMkEgkqvD4U
      CQRRQtypkOC6RjKVQRE1lkIRTFY7Xk/psW0qFubm+BSiYqXjUDtKkW4tm0kTj8UQTRYkATKZ
      LB6Pp8hWCI25qUkS+VczDrcXf5Wn6LAvMHWDqRWRXDSALkJtSw+NRXw60rFlboze6TYpcqi7
      B2vJxbDyScVC9PUP4ayqp6u1huuDY/T0dN6/PcCWULP0Xx/izJnTJb3NtkI6ssBYSKcys8As
      btI3xzn90DnMJYzgxfm5/FaAXIzlSBx/EYcYWVGIzE5gbTtGhaIxcG2AU2fPFNl2LVLb2LKp
      +4itpGjvPE5mOsOCVF304QcwO1w01NcTDgXI3toKsdP58iyOSs4++Ja1zz09+3gv0L5FFLHL
      GpcvX8GsmHZ8IUzXdRAEvK1dVCkWbiSWy3BY1wnFMmWvBGcSK0zNL2JSB1mUBJoOHd6UHVQO
      Hn8VN/svg6aiC1MMa2kOtRSbYRNxud3YbLa1+zWVXgHcEYwh0GbQdbLZDLNT4ywuxzl68hSW
      HRbAUP8lVlI6aFlcvkY6W+tLzDLpXHntJVSTo6yVYIB4eImhsWkAZIuT3q6OHRfBZtHULFcu
      XUSQzYBIZ++RIkbwzmEIoEy0XIrXXjmPxeUhGoly7uGHSszP7wY6qWQyP/y5hdliw1R0ASm/
      T0fV8kZt/7UBjh4/vuMCWB+Dx4qnRCQJNRPn+s05jnR3FC230xhDoDIRRJnqah/hWIpkIsZK
      PEGlc+/zHQTmZ9b535bjFJ+KR5iYWQB0EunS2xq2wsRQP1lzJTaTiEko/pjljeBJVlai9PUl
      AJGO7p5d6QEMAZSJIMq0HuoCXSeZiDE7M43N1rmjQ6AttIqG1kOUtzf1NmabE4VZIsksXb09
      O/z214ksB4klkgiyhlNS1mLwFGyPowKbPEnGYqGmsa2oEb/T7Hkn/qZDELDanbR37vXDv3XC
      szdRHTX09hzm5uBAGQG+NocoSrgr/bhsZiRJIhqLljgjSywtcvrUUWYnJ0uU3VkMAdyHyCYT
      8WiERCyKVkbcic0h4HRXkI6vUOGrwefzEQ6U8jnQCMzNcKWvn+nJMS5f7iORLe3QtCOtNYzg
      +418NLlIaJHFUJSmllYsJYzmrRALLdA/MoEsCniqm2gvY4fuXmD0APcZqeUpRmZWkPQsS8Fl
      rvXf4F68Aq0ON267GY+vHodp/z5m+7dlBveEZDiCyWnj5ug0Jx94ADMZ7sVgY3xkEG9jC/Fw
      mIX5uXtQw85gCOA+w9PcTeTmZWy+RmyShs3pvieLYBWVlQz3X2N87CaCpfR+pr3CsAEM7gnB
      +RkUVxUum4lgMLQWiW6/YawDGNwTAnMzhKdm8VY3kFhe3LcCMIZABvcEu8fLiVMP4BSSLMdL
      ++vuFUYPYLDjxMNLOPyNmCUBf0MLOXF3ky9uBqMHMNhxAnMz6NKqP7ZAYHFxT9tTDKMHMNhx
      qhsauXjpVWpra1gJLWH2lE5yuFcYs0AG94TV7dBmmxO7tXQUib3C6AEM7gmipFDpLT8q9l5h
      2AAG9zWGAAzuawwBGNzXGAIwuK8xBGBwX2MIwOC+5v8H1za6UrwPAz4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total confirmed vs Deaths by countries top 10' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
